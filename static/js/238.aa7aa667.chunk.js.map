{"version":3,"file":"static/js/238.aa7aa667.chunk.js","mappings":"6OAIe,SAASA,IACpB,OACI,SAAC,KAAM,CACHC,OAAO,MACPC,MAAM,MACNC,SAAS,8CACTC,OAAO,SAAC,KAAI,CAACC,GAAG,IAAG,UAAC,SAAC,IAAM,CAACC,KAAK,UAAS,SAAC,iBAGvD,C,cCLA,EANoB,WAClB,OACE,yBAAK,eAET,ECEA,EANsB,WACpB,OACE,yBAAK,iBAET,E,8MCJqBC,EAAO,wCAevB,OAfuB,iCAIxB,SAAYC,GACR,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,QAAS,CAAEC,OAAQJ,GACvD,GAAC,oBACD,SAAcK,EAAIL,GACd,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,YAAYE,EAAI,CAAED,OAAQJ,GAC9D,GAAC,kBACD,SAAYA,GACR,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,QAASH,EAC9C,GAAC,oBACD,SAAcK,GACV,OAAOJ,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,UAAW,CAAEG,IAAKD,GACvD,KAAC,EAfuB,GAAPN,EAEVI,QAAU,U,cCHN,SAASI,EAAaC,GACjC,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAef,OACI,8BAEQD,EAAME,MAAQ,GACR,SAAC,IAAU,CACTA,MAAOF,EAAME,MACbC,UAXF,WACd,IAAIC,GAASJ,EAAMK,KAAO,GAAKL,EAAMM,MAAQ,EAAI,EAC7CC,EAAMP,EAAMK,KAAOL,EAAMM,MAC7B,OAAO,SAAC,IAAG,UAAE,WAAaF,EAAQ,MAAQG,EAAM,WAAaP,EAAME,OACvE,EAQoBM,SAAUR,EAAMM,MAChBG,QAAST,EAAMK,KACfK,SAtBC,SAACL,EAAMM,GACpBX,EAAMM,QAAUK,EAChBV,GAAS,kBAAKD,GAAK,IAAEK,KAAM,EAAGC,MAAOK,KAErCV,GAAS,kBAAKD,GAAK,IAAEK,KAAMA,IAEnC,EAiBoBO,iBAAiB,IAEnB,MAItB,C,iCCwGO,SAASC,EAAQC,GAA0B,IAApBC,EAAK,uDAAG,UAC9BD,IACc,YAAVC,GACAC,EAAAA,GAAAA,QAAgBF,GACN,UAAVC,GACAC,EAAAA,GAAAA,MAAcF,GACJ,YAAVC,GACAC,EAAAA,GAAAA,QAAgBF,GAE5B,CAWA,I,UC3JqBxB,EAAO,wCAqBvB,OArBuB,iCAIxB,SAAYC,GACR,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,QAAS,CAAEC,OAAQJ,GACvD,GAAC,oBACD,SAAcK,EAAIL,GACd,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,YAAYE,EAAI,CAAED,OAAQJ,GAC9D,GAAC,kBACD,SAAYA,GACR,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,QAASH,EAC9C,GAAC,oBACD,SAAcK,GACV,OAAOJ,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,UAAW,CAAEG,IAAKD,GACvD,GAAC,4BACD,SAAsBL,GAClB,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,cAAeH,EACpD,GAAC,iCACD,SAA2BA,GACvB,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,yBAA0BH,EAC/D,KAAC,EArBuB,GCQb,SAAS0B,EAAmB,GAAuB,IAAD,IAApBC,UAAAA,OAAS,MAAG,KAAI,EAEzD,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCI,EAAQ,KAAEC,EAAW,KAC5B,GAAgCL,EAAAA,EAAAA,UAAS,IAAG,eAArCM,EAAQ,KAAEC,EAAW,KAC5B,GAA0BP,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,GAAIY,UAAAA,IAAY,eAA9DlB,EAAK,KAAEC,EAAQ,KAChB0B,GAAiBC,EAAAA,EAAAA,UAGjBC,EAAU,CACZ,CACI5C,MAAO,eACP6C,UAAW,gBACXC,OAAQ,SAACxC,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMyC,IAAI,GAEhC,CACI/C,MAAO,OACP6C,UAAW,OACXG,MAAO,IACPF,OAAQ,SAAAG,GAAC,OAAIC,IAAOD,GAAGE,OAAO,cAAc,GAEhD,CACInD,MAAO,SACP6C,UAAW,SACXG,MAAO,KAEX,CACIhD,MAAO,cACP6C,UAAW,aACXG,MAAO,KAEX,CACIhD,MAAO,SACP6C,UAAW,SACXG,MAAO,KAEX,CACIhD,MAAO,SACP6C,UAAW,MACXG,MAAO,GACPF,OAAQ,SAACG,EAAGG,GACR,OAAO,iCAEC,UAAC,IAAU,CACPpD,MAAM,4CACNqD,UAAW,WAAQC,EAAWF,EAAIG,IAAM,EACxCC,OAAO,MACPC,WAAW,KAAI,WAEf,SAAC,IAAM,CAACrD,KAAK,UAAUsD,KAAK,QAAQC,QAAM,EAACC,MAAM,SAACC,EAAA,EAAc,MAAO,WAI3E,SAAC,IAAM,CAACzD,KAAK,UAAUsD,KAAK,QAAQE,MAAM,SAACE,EAAA,EAAY,IAAKC,QAAS,WAAQrB,EAAelB,QAAQwC,SAASZ,EAAIG,IAAK,MAGlI,IAENU,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACL/B,GAAW,GACXhC,EAAAA,KAAaU,GAAOsD,MAAK,SAAAC,GAAQ,IAAD,EAC5BnC,EAAgB,QAAT,EAACmC,EAAIhE,YAAI,aAAR,EAAUiE,KAAI,SAACtB,GAAC,yBAAWA,GAAC,IAAEuB,IAAKvB,EAAEM,KAAG,KAChDvC,GAAS,kBAAKD,GAAK,IAAEM,MAAOiD,EAAIpE,MAAMmB,MAAOD,KAAMkD,EAAIpE,MAAMkB,KAAMH,MAAOqD,EAAIpE,MAAMe,QACxF,IAAGwD,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WACzBtC,GAAW,EACf,GACJ,CAEA,IAAMiB,EAAa,SAAC3C,GAChBN,EAAAA,OAAeM,GAAI0D,MAAK,SAAAC,GACpB1C,EAAQ0C,EAAIvC,SACZqC,IACA7B,EAAY,GAChB,IAAGkC,OAAM,SAAAC,GACL9C,EAAQ8C,EAAI3C,QAAS,QACzB,GACJ,EAEM6C,EAAehC,EAAQ2B,KAAI,SAACL,GAAI,yBAAWA,GAAI,IAAEW,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CACfC,UAAU,EACV7C,QAAAA,EACApC,MAAO,kBAAM,SAACkF,EAAM,CAAOxC,eAAAA,EAAgBJ,SAAAA,EAAUgB,WAAAA,EAAYvC,MAAAA,EAAOC,SAAAA,EAAUoD,KAAAA,EAAM5B,SAAAA,GAAc,EACtGkB,KAAM,QACNyB,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAOrE,MAAAA,EAAOC,SAAAA,GAAc,EACrDqE,aAAc,CACV5D,SAAU,SAAC6D,GACP/C,EAAY+C,EAChB,GAEJC,iBAAaC,GAuBjB,OApBAC,EAAAA,EAAAA,YAAU,WACNrB,GACJ,GAAG,CAACrD,EAAMK,KAAML,EAAMM,SAEtBoE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KAAoB,CAAEC,MAAO,IACxBtB,MAAK,SAAAC,GACF7B,EAAY6B,EAAIhE,KACpB,IACCmE,OAAM,SAAAC,GACwB,kBAAhBA,EAAI3C,QAEXH,EADS8C,EAAI3C,QAAQ6D,OAAOC,KAAKnB,EAAI3C,SAAS,IAClC,SAEZH,EAAQ8C,EAAI3C,QAAS,QAE7B,GACR,GAAG,KAIC,iCACI,SAAC,UAAgB,CAAC+D,MAAO,EAAGC,MAAO,CAAEC,OAAQ,GAAI,SAAC,2BAElD,SAAC,KAAK,kBACEhB,GAAU,IACdiB,WAAY,CAAEC,SAAU,CAAC,QAAS3E,SAAUR,EAAMM,OAClDuB,QAASgC,EACTuB,WAAY7F,EAAKyE,OAASzE,EAAK2D,QAAO,SAAAhB,GAAC,MAA0B,WAAtBA,EAAEmD,eAA4B,IAAI,GAC7EC,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,uBACvCC,WAAY,CACRC,kBAAmB,SAACC,GAAM,OACtBpG,EAAKiE,KAAI,SAAAtB,GACL,GAA0B,UAAtBA,EAAEmD,gBACF,OACI,iBACIL,MAAO,CACHY,WAAY,OACZC,aAAa,QACf,WAEF,iBAAMb,MAAO,CAACc,YAAY,QAAQ,SAAE5D,EAAE6D,cAAc/D,QACpD,iBAAMgD,MAAO,CAACc,YAAY,QAAQ,SAAE3D,IAAOD,EAAE8D,MAAM5D,OAAO,kBAC1D,iBAAM4C,MAAO,CAACc,YAAY,QAAQ,SAAE5D,EAAE+D,UACtC,iBAAMjB,MAAO,CAACc,YAAY,QAAQ,SAAE5D,EAAEgE,cACtC,iBAAMlB,MAAO,CAACc,YAAY,QAAQ,SAAE5D,EAAEmD,oBAItD,GAAE,EAENc,cAAe,SAACR,GAAM,MAAqB,mBAAhBA,EAAO3D,IAAyB,OAGnE,SAACoE,EAAO,CAACC,IAAK1E,EAAsB0B,KAAAA,EAAM5B,SAAAA,MAGtD,CAEA,SAAS0C,EAAO,GAAgB,EAAdxC,eAA0E,IAA1DJ,EAAQ,EAARA,SAAUgB,EAAU,EAAVA,WAAYvC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUoD,EAAI,EAAJA,KAAc,EAAR5B,SAE3E,OACI,SAAC,IAAI,CAAC6E,gBAAiBjD,EAAMkD,UAAU,cAAa,UAChD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,gBAAsB,CAACzD,OAAO,cAAc1B,SAAU,SAACgG,GAAQzG,GAAS,kBAAKD,GAAK,IAAE2G,UAAW,IAAIC,KAAKF,EAAE,IAAKG,QAAS,IAAID,KAAKF,EAAE,MAAO,SAGnJ,SAAC,IAAG,CAACD,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,IAAM,CAACxG,KAAK,UAAUyH,SAAS,SAAQ,SAAC,gBAGjD,SAAC,IAAG,CAACL,KAAM,GAAG,SAGNlF,EAASyC,QACH,SAAC,IAAU,CACT/E,MAAM,8CACNqD,UAAW,WAAQC,EAAWhB,EAAW,EACzCkB,OAAO,MACPC,WAAW,KAAI,UAEf,SAAC,IAAM,CAACrD,KAAK,UAAUuD,QAAM,EAACoC,MAAO,CAAE+B,MAAO,SAAWlE,MAAM,SAACC,EAAA,EAAc,IAAI,SAAC,sBAErF,WAO9B,CD1MqBxD,EAEVI,QAAU,aC0MrB,IAAM0G,GAAUY,EAAAA,EAAAA,aAAW,SAACjH,EAAOsG,GAC/B,IAAQhD,EAAmBtD,EAAnBsD,KAAM5B,EAAa1B,EAAb0B,SACd,GAAwBN,EAAAA,EAAAA,WAAS,GAAM,eAAhC8F,EAAI,KAAEC,EAAO,KACpB,GAAwB/F,EAAAA,EAAAA,UAAS,CAAEgG,OAAQ,IAAI,eAAxC5H,EAAI,KAAE6B,EAAO,KACpB,GAA0CD,EAAAA,EAAAA,WAAS,GAAM,eAAlDiG,EAAa,KAAEC,EAAgB,KAGhCC,EAAe,SAACC,GAClB1C,OAAO2C,QAAQD,GAAOE,SAAQ,SAAAC,GAK1B,IAJA,IAAIC,EAAQpI,EACNqI,EAAIF,EAAI,GACRxF,EAAIwF,EAAI,GACV5C,EAAO8C,EAAEC,MAAM,KACVC,EAAI,EAAGA,EAAIhD,EAAKd,OAAQ8D,IACzBA,EAAI,IAAMhD,EAAKd,OACf2D,EAAM7C,EAAKgD,IAAM5F,GAEa,qBAAnByF,EAAM7C,EAAKgD,MACU,EAAxBC,SAASjD,EAAKgD,EAAI,KAAW,EAC7BH,EAAM7C,EAAKgD,IAAM,GAEjBH,EAAM7C,EAAKgD,IAAM,CAAC,GAExBH,EAAQA,EAAM7C,EAAKgD,IAGjC,IACA1G,GAAQ,UAAK7B,GACjB,GAEAyI,EAAAA,EAAAA,qBAAoB3B,GAAK,iBAAO,CAC5BpD,SAAQ,SAACgF,GACLf,GAAQ,GACR9F,EACI6G,EACM,CAAEzF,IAAKyF,GACP,CAAEjJ,QAAQ,GAExB,EACH,IAED,IAYMkJ,EAAO,WACTb,GAAiB,GACjB/H,EAAAA,KAAaC,GAAM+D,MAAK,SAACC,GACrB1C,EAAQ0C,EAAIvC,SACZsG,GAAa,UAAK/D,EAAIhE,OACtB8D,GACJ,IAAGK,OAAM,SAAAC,GACsB,kBAAhBA,EAAI3C,QAEXH,EADS8C,EAAI3C,QAAQ6D,OAAOC,KAAKnB,EAAI3C,SAAS,IAClC,SAEZH,EAAQ8C,EAAI3C,QAAS,QAE7B,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,GAEJ,EAgBA,OAdA3C,EAAAA,EAAAA,YAAU,WACFnF,EAAKiD,MA/BT6E,GAAiB,GACjB/H,EAAAA,OAAeC,EAAKiD,KAAKc,MAAK,SAAAC,GAC1BnC,EAAQmC,EAAIhE,MAAQ,CAAC,EAEzB,IAAGmE,OAAM,SAAAC,GACL9C,EAAQ8C,EAAI3C,QAAS,QACzB,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,IA0BJ,GAAG,CAAC9H,EAAKiD,OAETkC,EAAAA,EAAAA,YAAU,WACDuC,GACD7F,EAAQ,CAAEoB,IAAK,MAEvB,GAAG,CAACyE,KAKA,+BACI,SAAC,IAAK,CACFhI,OAASM,EAAKiD,IAAc,OAAR,OAAkB,oBACtCwC,MAAO,CAAEmD,IAAK,IACdlB,KAAMA,EACNxE,OAAO,OACP2F,KAAMF,EACNG,cAAe,CAAEC,SAAUlB,GAC3BmB,SAAU,WAAQrB,GAAQ,EAAQ,EAElCsB,cAAc,EACdvG,MAAO,KACPsE,UAAU,0BACVlC,OAAQ,EACJ,SAAC,IAAM,CAAcrB,QAAS,WAAQkE,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAY7H,KAAK,UAAU2D,QAASkF,EAAK,SAAC,QAArC,SACd,UAEF,SAAC,IAAI,CAACO,SAAUrB,EAAesB,WAAW,SAACC,EAAA,EAAe,CAAC3D,MAAO,CAAE4D,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,IAAI,CAACC,OAAO,WAAU,UACnB,UAAC,IAAG,CAACtC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,aAAaC,UAAQ,YAClC,SAAC,IAAM,CAACzB,MAAOhI,EAAK2B,UAAWR,SAAU,SAAAwB,GAAOoF,EAAa,CAAEpG,UAAWgB,GAAK,EAAE,SAEzET,EAAS+B,KAAI,SAAAL,GAAI,OAAI,SAAC,WAAa,CAACoE,MAAOpE,EAAKX,IAAI,SAAiBW,EAAKnB,MAAhBmB,EAAKX,IAAgC,WAK/G,SAAC,IAAG,CAACiE,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,SAASC,UAAQ,YAC9B,SAAC,IAAK,CAACC,YAAY,eAAe5J,KAAK,SAAS6J,IAAK,EAAG3B,MAAOhI,EAAK0G,OAAQvF,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAErB,OAAQS,EAAEyC,OAAO5B,OAAQ,SAG7I,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAK,CAACC,YAAY,kBAAkB1B,MAAOhI,EAAKF,KAAMqB,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEjI,KAAMqH,EAAEyC,OAAO5B,OAAQ,SAGtH,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,cAAcC,UAAQ,YACnC,SAAC,IAAK,CAACC,YAAY,oBAAoB1B,MAAOhI,EAAK2G,WAAYxF,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEpB,WAAYQ,EAAEyC,OAAO5B,OAAQ,SAGpI,SAAC,IAAG,CAACd,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,qBAAqBC,UAAQ,YAC1C,SAAC,IAAK,CAACzB,MAAOhI,EAAK6J,kBAAmB1I,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAE8B,kBAAmB1C,EAAEyC,OAAO5B,OAAQ,SAGlH,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAU,CAAC5G,OAAO,cAAc1B,SAAU,SAACwB,GAAQoF,EAAa,CAAEtB,KAAM9D,GAAK,EAAGqF,MAAOpF,IAAW,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAMyG,MAAOO,UAAU,eAG9H,SAAC,IAAG,CAACE,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,mBAAmBC,UAAQ,YACxC,UAAC,IAAM,CAACzB,MAAOhI,EAAK8F,gBAAiB3E,SAAU,SAAAwB,GAAOoF,EAAa,CAAEjC,gBAAiBnD,GAAK,EAAE,WACzF,SAAC,WAAa,CAACqF,MAAO,SAAS,SAAE,YACjC,SAAC,WAAa,CAACA,MAAO,QAAQ,SAAE,kBAI5C,SAAC,IAAG,CAACd,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,UAAS,UACtB,SAAC,aAAc,CAACM,KAAM,EAAGC,KAAM,EAAG/B,MAAOhI,EAAKgK,QAAS7I,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEiC,QAAS7C,EAAEyC,OAAO5B,OAAQ,kBAWrJ,ICxWe,SAASiC,EAAQ,GAAW,IAATnK,EAAI,EAAJA,KAE9B,GAAwB8B,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCI,EAAQ,KAAEC,EAAW,KAC5B,GAA0BL,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,KAAK,eAAnDN,EAAK,KAAEC,EAAQ,KAChB0B,GAAiBC,EAAAA,EAAAA,UACjB6H,GAAsB7H,EAAAA,EAAAA,UAGtBC,EAAU,CACZ,CACI5C,MAAO,OACP6C,UAAW,QAGf,CACI7C,MAAO,iBACP6C,UAAW,gBACXG,MAAO,KAEX,CACIhD,MAAO,SACP6C,UAAW,SACXG,MAAO,GACPF,OAAQ,SAAC2H,EAAGrH,GACR,MAAmB,WAAfA,EAAIrD,QACG,SAAC,IAAG,CAAC2K,MAAM,QAAO,SAAC,YAEnB,SAAC,IAAG,CAACA,MAAM,MAAK,SAAC,UAEhC,GAEJ,CACI1K,MAAO,SACP6C,UAAW,MACXG,MAAO,IACPF,OAAQ,SAACG,EAAGG,GACR,OAAO,iCAEC,UAAC,IAAU,CACPpD,MAAM,4CACNqD,UAAW,WAAQC,EAAWF,EAAIG,IAAM,EACxCC,OAAO,MACPC,WAAW,KAAI,WAEf,SAAC,IAAM,CAACrD,KAAK,UAAUsD,KAAK,QAAQC,QAAM,EAACC,MAAM,SAACC,EAAA,EAAc,MAAO,WAI3E,SAAC,IAAM,CAACzD,KAAK,UAAUsD,KAAK,QAAQE,MAAM,SAACE,EAAA,EAAY,IAAKC,QAAS,WAAQrB,EAAelB,QAAQwC,SAASZ,EAAIG,IAAK,EAAGwC,MAAO,CAAEc,YAAa,UAG/I,SAAC,IAAM,CAACzG,KAAK,UAAUsD,KAAK,QAAQE,MAAM,SAAC+G,EAAA,EAAW,IAAK5G,QAAS,WAAQyG,EAAoBhJ,QAAQwC,SAASZ,EAAIG,IAAK,MAGtI,IAENU,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACL/B,GAAW,GACXhC,EAAQ+D,KAAKrD,GAAOsD,MAAK,SAAAC,GAAQ,IAAD,EAC5BnC,EAAgB,QAAT,EAACmC,EAAIhE,YAAI,aAAR,EAAUiE,KAAI,SAACtB,GAAC,yBAAWA,GAAC,IAAEuB,IAAKvB,EAAEM,KAAG,KAChDvC,GAAS,kBAAKD,GAAK,IAAEM,MAAOiD,EAAIpE,MAAMmB,MAAOD,KAAMkD,EAAIpE,MAAMkB,KAAMH,MAAOqD,EAAIpE,MAAMe,QACxF,IAAGwD,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WACzBtC,GAAW,EACf,GACJ,CAEA,IAAMiB,EAAa,SAAC3C,GAChBN,EAAAA,OAAeM,GAAI0D,MAAK,SAAAC,GACpB1C,EAAQ0C,EAAIvC,SACZqC,IACA7B,EAAY,GAChB,IAAGkC,OAAM,SAAAC,GACL9C,EAAQ8C,EAAI3C,QAAS,QACzB,GACJ,EAEM6C,EAAehC,EAAQ2B,KAAI,SAACL,GAAI,yBAAWA,GAAI,IAAEW,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CACfC,UAAU,EACV7C,QAAAA,EACAsB,KAAM,QACN1D,MAAO,kBAAM,SAAC,EAAM,CAAO0C,eAAAA,EAAgBJ,SAAAA,EAAUgB,WAAAA,EAAYvC,MAAAA,EAAOC,SAAAA,EAAUoD,KAAAA,GAAU,EAC5Fe,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAOrE,MAAAA,EAAOC,SAAAA,GAAc,EACrDqE,aAAc,CACV5D,SAAU,SAAC6D,GACP/C,EAAY+C,EAChB,GAEJC,iBAAaC,GAOjB,OAJAC,EAAAA,EAAAA,YAAU,WACNrB,GACJ,GAAG,CAACrD,EAAMK,KAAML,EAAMM,SAGlB,iCACI,SAAC,UAAgB,CAACyE,MAAO,EAAE,SAAC,uBAE5B,SAAC,KAAK,kBACEd,GAAU,IACdiB,WAAY,CAAEC,SAAU,CAAC,QAAS3E,SAAUR,EAAMM,OAClDuB,QAASgC,EACTuB,WAAY7F,EAAKyE,OAASzE,EAAO,GACjC+F,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,2BAE3C,SAAC,EAAO,CAACa,IAAK1E,EAAsB0B,KAAAA,EAAMhE,KAAAA,KAC1C,SAACwK,EAAgB,CAACxD,IAAKoD,MAInC,CAEA,SAAStF,EAAO,GAAkE,IAAhExC,EAAc,EAAdA,eAAgBJ,EAAQ,EAARA,SAAUgB,EAAU,EAAVA,WAAYvC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUoD,EAAI,EAAJA,KAIrE,OACI,SAAC,IAAI,CAACiD,gBAAiBjD,EAAMkD,UAAU,cAAa,UAChD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,IAAK,CAACoD,YAAY,iBAAiBvI,SAAU,SAACgG,GAAQzG,GAAS,kBAAKD,GAAK,IAAEyD,IAAKiD,EAAEyC,OAAO5B,QAAS,SAG3G,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,IAAM,CAACxG,KAAK,UAAUyH,SAAS,SAAQ,SAAC,gBAGjD,UAAC,IAAG,CAACL,KAAM,EAAE,WAEL,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,EAAGkB,MAAO,SAAU,UAClD,SAAC,IAAM,CAAC1H,KAAK,UAAUwD,MAAM,SAAC,IAAY,IAAKG,QAAS,WAAQrB,EAAelB,QAAQwC,UAAW,EAAE,SAAC,cAIzG1B,EAASyC,QACH,SAAC,IAAU,CACT/E,MAAM,8CACNqD,UAAW,WAAQC,EAAWhB,EAAW,EACzCkB,OAAO,MACPC,WAAW,KAAI,UAEf,SAAC,IAAM,CAACrD,KAAK,UAAUuD,QAAM,EAACoC,MAAO,CAAE+B,MAAO,SAAWlE,MAAM,SAACC,EAAA,EAAc,IAAI,SAAC,sBAErF,YAO9B,CAEA,IAAMsD,GAAUY,EAAAA,EAAAA,aAAW,SAACjH,EAAOsG,GAC/B,IAAQhD,EAAStD,EAATsD,KACR,GAAwBlC,EAAAA,EAAAA,WAAS,GAAM,eAAhC8F,EAAI,KAAEC,EAAO,KACpB,GAAwB/F,EAAAA,EAAAA,UAAS,CAAEgG,OAAQ,IAAI,eAAxC5H,EAAI,KAAE6B,EAAO,KACpB,GAA0CD,EAAAA,EAAAA,WAAS,GAAM,eAAlDiG,EAAa,KAAEC,EAAgB,KAEhCC,EAAe,SAACC,GAAYnG,GAAQ,kBAAK7B,GAASgI,GAAU,GAElES,EAAAA,EAAAA,qBAAoB3B,GAAK,iBAAO,CAC5BpD,SAAQ,SAACgF,GACLf,GAAQ,GACR9F,EACI6G,EACM,CAAEzF,IAAKyF,GACP,CAAEjJ,QAAQ,GAExB,EACH,IAED,IAYMkJ,EAAO,WACTb,GAAiB,GACjB/H,EAAQ4I,KAAK3I,GAAM+D,MAAK,SAACC,GACrB1C,EAAQ0C,EAAIvC,SACZsG,GAAa,UAAK/D,EAAIhE,OACtB8D,GACJ,IAAGK,OAAM,SAAAC,GACsB,kBAAhBA,EAAI3C,QAEXH,EADS8C,EAAI3C,QAAQ6D,OAAOC,KAAKnB,EAAI3C,SAAS,IAClC,SAEZH,EAAQ8C,EAAI3C,QAAS,QAE7B,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,GAEJ,EAcA,OAZA3C,EAAAA,EAAAA,YAAU,WACFnF,EAAKiD,MA/BT6E,GAAiB,GACjB/H,EAAQwK,OAAOvK,EAAKiD,KAAKc,MAAK,SAAAC,GAC1BnC,EAAQmC,EAAIhE,MAAQ,CAAC,EAEzB,IAAGmE,OAAM,SAAAC,GACL9C,EAAQ8C,EAAI3C,QAAS,QACzB,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,IA0BJ,GAAG,CAAC9H,EAAKiD,OAETkC,EAAAA,EAAAA,YAAU,WACDuC,GACD7F,EAAQ,CAAEoB,IAAK,MAEvB,GAAG,CAACyE,KAGA,+BACI,SAAC,IAAK,CACFhI,OAASM,EAAKiD,IAAc,OAAR,OAAkB,gBACtCwC,MAAO,CAAEmD,IAAK,IACdlB,KAAMA,EACNxE,OAAO,OACP2F,KAAMF,EACNG,cAAe,CAAEC,SAAUlB,GAC3BmB,SAAU,WAAQrB,GAAQ,EAAQ,EAClC6C,gBAAc,EACdvB,cAAc,EACdvG,MAAO,IACPsE,UAAU,0BACVlC,OAAQ,EACJ,SAAC,IAAM,CAAcrB,QAAS,WAAQkE,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAY7H,KAAK,UAAU2D,QAASkF,EAAK,SAAC,QAArC,SACd,UAEF,SAAC,IAAI,CAACO,SAAUrB,EAAesB,WAAW,SAACC,EAAA,EAAe,CAAC3D,MAAO,CAAE4D,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,IAAI,CAACC,OAAO,WAAU,UACnB,UAAC,IAAG,CAACtC,OAAQ,CAAC,EAAG,GAAG,WAChB,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAK,CAACC,YAAY,aAAa1B,MAAOhI,EAAKyC,KAAMtB,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEtF,KAAM0E,EAAEyC,OAAO5B,OAAQ,SAGjH,SAAC,IAAG,CAACd,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,iBAAiBC,UAAQ,YACtC,SAAC,IAAK,CAAC3J,KAAK,SAAS2K,aAAc,EAAGzC,MAAOhI,EAAK0K,cAAevJ,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAE2C,cAAevD,EAAEyC,OAAO5B,OAAQ,SAGzI,SAAC,IAAG,CAACd,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,SAASC,UAAQ,YAC9B,UAAC,IAAM,CAACzB,MAAOhI,EAAKP,OAAQ0B,SAAU,SAAAwB,GAAOoF,EAAa,CAAEtI,OAAQkD,GAAK,EAAE,WACvE,SAAC,WAAa,CAACqF,MAAM,SAAQ,SAAC,YAC9B,SAAC,WAAa,CAACA,MAAM,SAAQ,SAAC,4BAUtE,IAGMsC,GAAmB7C,EAAAA,EAAAA,aAAW,SAACjH,EAAOsG,GACxC,OAAwBlF,EAAAA,EAAAA,WAAS,GAAM,eAAhC8F,EAAI,KAAEC,EAAO,KACpB,GAAwB/F,EAAAA,EAAAA,UAAS,CAAEgG,OAAQ,IAAI,eAAxC5H,EAAI,KAAE6B,EAAO,KAQpB,OANA4G,EAAAA,EAAAA,qBAAoB3B,GAAK,iBAAO,CAC5BpD,SAAQ,SAACgF,GACLf,GAAQ,GACR9F,EAAQ6G,EACZ,EACH,KAEG,+BACI,SAAC,IAAK,CACFjD,MAAO,CAAEmD,IAAK,IACdlB,KAAMA,EACNxE,OAAO,OACP8F,SAAU,WAAQrB,GAAQ,EAAQ,EAClCsB,cAAc,EACdvG,MAAO,KACP8H,gBAAc,EACdxD,UAAU,0BACVlC,OAAQ,KAAK,UAEb,SAACpD,EAAkB,CAACC,UAAW3B,OAI/C,I,gECrTqBD,GAAO,wCAavB,OAbuB,gCAIxB,SAAW4K,GACP,OAAO1K,EAAAA,EAAAA,IAAU,MAAQ0K,EAC7B,GAAC,kBAED,SAAY3K,EAAM4K,GACd,OAAO3K,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,QAASH,EAAM4K,EACpD,GAAC,oBACD,SAAc5K,GACV,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,UAAWH,EAChD,KAAC,EAbuB,GCKb,SAAS6K,GAAY,GAAyD,IAAvDC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAY,EAAD,EAAEC,MAAAA,OAAK,MAAG,EAAC,MAAEjC,SAAAA,OAAQ,OAAQ,EAC9EkC,EAAW,2CAAG,WAAMC,GAAO,uFACrBC,EAAyCD,EAAzCC,UAAWC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,WAE5BC,EAAS,IAAIC,SACbZ,EAAS,CAAEa,iBAAkB,SAAAC,GAAWJ,EAAW,CAAEK,QAAUD,EAAME,OAASF,EAAM/K,MAAS,KAAQ,GAC3G4K,EAAOM,OAAO,OAAQR,GACtB,IACIS,GAAAA,KAAiBP,EAAQX,GAAQ7G,MAAK,SAAAC,GAClCmH,EAAU,MACVJ,EAAY,GAAD,gBAAKD,GAAQ,CAAE,CAAEiB,IAAK/H,EAAIhE,KAAK+L,IAAKpB,IAAK3G,EAAIhE,KAAK2K,IAAKlI,KAAMuB,EAAIhE,KAAKyC,QACrF,GAGJ,CAFE,MAAO2B,GACLgH,EAAQ,CAAEhH,IAAAA,GACd,CAAC,2CACJ,gBAdgB,sCA6BjB,OAAO,SAAC,KAAM,CACV4H,OAAO,WACPC,cAAehB,EACf9J,SAhBmB,SAAH,GAAU,EAAJkK,KAAgB,IAAVa,EAAE,EAAFA,UACjBA,UAAc,KACrBA,EAAK,IAETnB,EAAYmB,EAEhB,EAWIC,SAViB,SAACd,GAClBS,GAAAA,OAAmB,CAAEC,IAAKV,EAAKU,MAAOhI,MAAK,SAAAC,GACvC,GAER,EAOIoI,SAAS,UACTtB,SAAUA,EACV9D,UAAU,oBACV+B,SAAUA,EACVsD,UAAW,SAAChB,GACR,OAAOiB,MAAMjB,EAAKV,IAAK,CACnB4B,OAAQ,QAEPxI,MAAK,SAAAC,GAAG,OAAIA,EAAIwI,MAAM,IACtBzI,MAAK,YACF,OADc,EAAT0I,SAET,GACR,EAAE,UAGU,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAUrG,SAAUuG,EACd,MACA,SAAC,IAAM,CAAC1H,MAAM,SAACoJ,EAAA,EAAc,IAAK5M,KAAK,SAASuD,QAAM,EAACoC,MAAO,CAAEC,OAAQ,GAAIhD,MAAO,QAAQ,SAAC,qBAI9G,CCpDe,SAASiK,GAAY,GAAiC,IAAD,IAA9B7G,gBAAAA,OAAe,MAAG,SAAQ,EACtD8G,EAAOC,OAAOC,SAASC,SAASzE,MAAM,KAAK,GACjD,GAAwB1G,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCI,EAAQ,KAAEC,EAAW,KAC5B,GAAgCL,EAAAA,EAAAA,UAAS,IAAG,eAArCM,EAAQ,KAAEC,EAAW,KAC5B,GAA0BP,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,GAAI+E,gBAAAA,IAAkB,eAApErF,EAAK,KAAEC,EAAQ,KAChB0B,GAAiBC,EAAAA,EAAAA,UACjB2K,GAAoB3K,EAAAA,EAAAA,UAEpBC,EAAU,CACZ,CACI5C,MAAO,eACP6C,UAAW,gBACXC,OAAQ,SAACxC,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMyC,IAAI,GAEhC,CACI/C,MAAO,qBACP6C,UAAW,oBACXG,MAAO,IACPmB,OAA4B,UAApBiC,GAEZ,CACIpG,MAAO,OACP6C,UAAW,OACXG,MAAO,IACPF,OAAQ,SAAAG,GAAC,OAAIC,IAAOD,GAAGE,OAAO,cAAc,GAEhD,CACInD,MAAO,SACP6C,UAAW,SACXG,MAAO,KAEX,CACIhD,MAAO,cACP6C,UAAW,aACXG,MAAO,KAEX,CACIhD,MAAO,SACP6C,UAAW,MACXG,MAAO,GACPF,OAAQ,SAACG,EAAGG,GACR,OAAO,iCAEC,UAAC,IAAU,CACPpD,MAAM,4CACNqD,UAAW,WAAQC,EAAWF,EAAIG,IAAM,EACxCC,OAAO,MACPC,WAAW,KAAI,WAEf,SAAC,IAAM,CAACrD,KAAK,UAAUsD,KAAK,QAAQC,QAAM,EAACC,MAAM,SAACC,EAAA,EAAc,MAAO,WAI3E,SAAC,IAAM,CAACzD,KAAK,UAAUsD,KAAK,QAAQE,MAAM,SAACE,EAAA,EAAY,IAAKC,QAAS,WAAQrB,EAAelB,QAAQwC,SAASZ,EAAIG,IAAK,MAGlI,IAENU,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACL/B,GAAW,GACXhC,EAAAA,KAAaU,GAAOsD,MAAK,SAAAC,GAAQ,IAAD,EAC5BnC,EAAgB,QAAT,EAACmC,EAAIhE,YAAI,aAAR,EAAUiE,KAAI,SAACtB,GAAC,yBAAWA,GAAC,IAAEuB,IAAKvB,EAAEM,KAAG,KAChDvC,GAAS,kBAAKD,GAAK,IAAEM,MAAOiD,EAAIpE,MAAMmB,MAAOD,KAAMkD,EAAIpE,MAAMkB,KAAMH,MAAOqD,EAAIpE,MAAMe,QACxF,IAAGwD,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WACzBtC,GAAW,EACf,GACJ,CAEA,IAAMiB,EAAa,SAAC3C,GAChBN,EAAAA,OAAeM,GAAI0D,MAAK,SAAAC,GACpB1C,EAAQ0C,EAAIvC,SACZqC,IACA7B,EAAY,GAChB,IAAGkC,OAAM,SAAAC,GACL9C,EAAQ8C,EAAI3C,QAAS,QACzB,GACJ,EAEM6C,EAAehC,EAAQ2B,KAAI,SAACL,GAAI,yBAAWA,GAAI,IAAEW,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CACfC,UAAU,EACV7C,QAAAA,EACAsB,KAAM,QACN1D,MAAO,kBAAM,SAAC,GAAM,CAAO0C,eAAAA,EAAgB4K,kBAAAA,EAAmBhL,SAAAA,EAAUgB,WAAAA,EAAYvC,MAAAA,EAAOC,SAAAA,EAAUoD,KAAAA,EAAM5B,SAAAA,GAAc,EACzH2C,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAOrE,MAAAA,EAAOC,SAAAA,GAAc,EACrDqE,aAAc,CACV5D,SAAU,SAAC6D,GACP/C,EAAY+C,EAChB,GAEJC,iBAAaC,GA2BjB,OAzBAC,EAAAA,EAAAA,YAAU,WACNzE,GAAS,kBAAKD,GAAK,IAAEqF,gBAA0B,sBAAT8G,EAA+B,QAAU,WACnF,GAAG,CAACA,KAEJzH,EAAAA,EAAAA,YAAU,WACNrB,GACJ,GAAG,CAACrD,EAAMK,KAAML,EAAMM,MAAON,EAAMqF,mBAGnCX,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KAAoB,CAAEC,MAAO,IACxBtB,MAAK,SAAAC,GACF7B,EAAY6B,EAAIhE,KACpB,IACCmE,OAAM,SAAAC,GACwB,kBAAhBA,EAAI3C,QAEXH,EADS8C,EAAI3C,QAAQ6D,OAAOC,KAAKnB,EAAI3C,SAAS,IAClC,SAEZH,EAAQ8C,EAAI3C,QAAS,QAE7B,GACR,GAAG,KAIC,iCACI,SAAC,UAAgB,CAAC+D,MAAO,EAAGC,MAAO,CAAEC,OAAQ,GAAI,SAAC,2BAElD,SAAC,KAAK,kBACEhB,GAAU,IACdiB,WAAY,CAAEC,SAAU,CAAC,QAAS3E,SAAUR,EAAMM,OAClDuB,QAASgC,EACTuB,WAAY7F,EAAKyE,OAASzE,EAAO,GACjC+F,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,2BAE3C,SAAC,GAAO,CAACa,IAAK1E,EAAsB0B,KAAAA,EAAM5B,SAAAA,KAC1C,SAAC+K,GAAc,CAACnG,IAAKkG,EAAmBlH,gBAAiBA,EAAiBhC,KAAMA,MAG5F,CAEA,SAASc,GAAO,GAA+F,IAA7FxC,EAAc,EAAdA,eAAgB4K,EAAiB,EAAjBA,kBAAmBhL,EAAQ,EAARA,SAAUgB,EAAU,EAAVA,WAAYvC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUoD,EAAI,EAAJA,KAAM5B,EAAQ,EAARA,SAE9F,OACI,SAAC,IAAI,CAAC6E,gBAAiBjD,EAAMkD,UAAU,cAAa,UAChD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,IAAM,CAACoD,YAAY,mBAAmB1B,MAAOvH,EAAMkB,UAAWR,SAAU,SAAAwB,GAAOjC,GAAS,kBAAKD,GAAK,IAAEkB,UAAWgB,IAAK,EAAGuK,YAAU,WAE1HhL,EAAS+B,KAAI,SAAAtB,GAAC,OACV,SAAC,WAAa,CAACqF,MAAOrF,EAAEM,IAAI,SAAcN,EAAEF,MAAVE,EAAEM,IAA6B,WAMrF,SAAC,IAAG,CAACiE,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,gBAAsB,CAACzD,OAAO,cAAc1B,SAAU,SAACgG,GAAQzG,GAAS,kBAAKD,GAAK,IAAE2G,UAAW,IAAIC,KAAKF,EAAE,IAAKG,QAAS,IAAID,KAAKF,EAAE,MAAO,SAGnJ,SAAC,IAAG,CAACD,KAAM,EAAE,UACT,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,GAAI,UAClC,SAAC,IAAM,CAACxG,KAAK,UAAUyH,SAAS,SAAQ,SAAC,gBAGjD,UAAC,IAAG,CAACL,KAAM,GAAG,WAEN,SAAC,SAAS,CAACzB,MAAO,CAAEa,aAAc,EAAGkB,MAAO,SAAU,UAClD,SAAC,IAAM,CAAC1H,KAAK,UAAUwD,MAAM,SAAC,IAAY,IAAKG,QAAS,WAAQrB,EAAelB,QAAQwC,UAAW,EAAE,SAAC,eAIzG,SAAC,SAAS,CAAC+B,MAAO,CAAEa,aAAc,EAAGkB,MAAO,QAASjB,YAAa,QAAS,UACvE,SAAC,IAAM,CAACzG,KAAK,UAAUwD,MAAM,SAACoJ,EAAA,EAAc,IAAKjJ,QAAS,WAAQuJ,EAAkB9L,QAAQwC,UAAW,EAAE,SAAC,wBAI9G1B,EAASyC,QACH,SAAC,IAAU,CACT/E,MAAM,8CACNqD,UAAW,WAAQC,EAAWhB,EAAW,EACzCkB,OAAO,MACPC,WAAW,KAAI,UAEf,SAAC,IAAM,CAACrD,KAAK,UAAUuD,QAAM,EAACoC,MAAO,CAAE+B,MAAO,SAAWlE,MAAM,SAACC,EAAA,EAAc,IAAI,SAAC,sBAErF,YAO9B,CF9MqBxD,GAEVI,QAAU,OE8MrB,IAAM0G,IAAUY,EAAAA,EAAAA,aAAW,SAACjH,EAAOsG,GAC/B,IAAQhD,EAAmBtD,EAAnBsD,KAAM5B,EAAa1B,EAAb0B,SACd,GAAwBN,EAAAA,EAAAA,WAAS,GAAM,eAAhC8F,EAAI,KAAEC,EAAO,KACpB,GAAwB/F,EAAAA,EAAAA,UAAS,CAAEgG,OAAQ,IAAI,eAAxC5H,EAAI,KAAE6B,EAAO,KACpB,GAA0CD,EAAAA,EAAAA,WAAS,GAAM,eAAlDiG,EAAa,KAAEC,EAAgB,KAGhCC,EAAe,SAACC,GAClB1C,OAAO2C,QAAQD,GAAOE,SAAQ,SAAAC,GAK1B,IAJA,IAAIC,EAAQpI,EACNqI,EAAIF,EAAI,GACRxF,EAAIwF,EAAI,GACV5C,EAAO8C,EAAEC,MAAM,KACVC,EAAI,EAAGA,EAAIhD,EAAKd,OAAQ8D,IACzBA,EAAI,IAAMhD,EAAKd,OACf2D,EAAM7C,EAAKgD,IAAM5F,GAEa,qBAAnByF,EAAM7C,EAAKgD,MACU,EAAxBC,SAASjD,EAAKgD,EAAI,KAAW,EAC7BH,EAAM7C,EAAKgD,IAAM,GAEjBH,EAAM7C,EAAKgD,IAAM,CAAC,GAExBH,EAAQA,EAAM7C,EAAKgD,IAGjC,IACA1G,GAAQ,UAAK7B,GACjB,GAEAyI,EAAAA,EAAAA,qBAAoB3B,GAAK,iBAAO,CAC5BpD,SAAQ,SAACgF,GACLf,GAAQ,GACR9F,EACI6G,EACM,CAAEzF,IAAKyF,GACP,CAAEjJ,QAAQ,GAExB,EACH,IAED,IAYMkJ,EAAO,WACTb,GAAiB,GACjB/H,EAAAA,KAAaC,GAAM+D,MAAK,SAACC,GACrB1C,EAAQ0C,EAAIvC,SACZsG,GAAa,UAAK/D,EAAIhE,OACtB8D,GACJ,IAAGK,OAAM,SAAAC,GACsB,kBAAhBA,EAAI3C,QAEXH,EADS8C,EAAI3C,QAAQ6D,OAAOC,KAAKnB,EAAI3C,SAAS,IAClC,SAEZH,EAAQ8C,EAAI3C,QAAS,QAE7B,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,GAEJ,EAgBA,OAdA3C,EAAAA,EAAAA,YAAU,WACFnF,EAAKiD,MA/BT6E,GAAiB,GACjB/H,EAAAA,OAAeC,EAAKiD,KAAKc,MAAK,SAAAC,GAC1BnC,EAAQmC,EAAIhE,MAAQ,CAAC,EAEzB,IAAGmE,OAAM,SAAAC,GACL9C,EAAQ8C,EAAI3C,QAAS,QACzB,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,IA0BJ,GAAG,CAAC9H,EAAKiD,OAETkC,EAAAA,EAAAA,YAAU,WACDuC,GACD7F,EAAQ,CAAEoB,IAAK,MAEvB,GAAG,CAACyE,KAKA,+BACI,SAAC,IAAK,CACFhI,OAASM,EAAKiD,IAAc,OAAR,OAAkB,oBACtCwC,MAAO,CAAEmD,IAAK,IACdlB,KAAMA,EACNxE,OAAO,OACP2F,KAAMF,EACNG,cAAe,CAAEC,SAAUlB,GAC3BmB,SAAU,WAAQrB,GAAQ,EAAQ,EAElCsB,cAAc,EACdvG,MAAO,KACPsE,UAAU,0BACVlC,OAAQ,EACJ,SAAC,IAAM,CAAcrB,QAAS,WAAQkE,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAY7H,KAAK,UAAU2D,QAASkF,EAAK,SAAC,QAArC,SACd,UAEF,SAAC,IAAI,CAACO,SAAUrB,EAAesB,WAAW,SAACC,EAAA,EAAe,CAAC3D,MAAO,CAAE4D,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,IAAI,CAACC,OAAO,WAAU,UACnB,UAAC,IAAG,CAACtC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,aAAaC,UAAQ,YAClC,SAAC,IAAM,CAACzB,MAAOhI,EAAK2B,UAAWR,SAAU,SAAAwB,GAAOoF,EAAa,CAAEpG,UAAWgB,GAAK,EAAE,SAEzET,EAAS+B,KAAI,SAAAL,GAAI,OAAI,SAAC,WAAa,CAACoE,MAAOpE,EAAKX,IAAI,SAAiBW,EAAKnB,MAAhBmB,EAAKX,IAAgC,WAK/G,SAAC,IAAG,CAACiE,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,SAASC,UAAQ,YAC9B,SAAC,IAAK,CAACC,YAAY,eAAe5J,KAAK,SAAS6J,IAAK,EAAG3B,MAAOhI,EAAK0G,OAAQvF,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAErB,OAAQS,EAAEyC,OAAO5B,OAAQ,SAG7I,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAK,CAACC,YAAY,kBAAkB1B,MAAOhI,EAAKF,KAAMqB,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEjI,KAAMqH,EAAEyC,OAAO5B,OAAQ,SAGtH,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,cAAcC,UAAQ,YACnC,SAAC,IAAK,CAACC,YAAY,oBAAoB1B,MAAOhI,EAAK2G,WAAYxF,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEpB,WAAYQ,EAAEyC,OAAO5B,OAAQ,SAGpI,SAAC,IAAG,CAACd,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,qBAAqBC,UAAQ,YAC1C,SAAC,IAAK,CAACzB,MAAOhI,EAAK6J,kBAAmB1I,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAE8B,kBAAmB1C,EAAEyC,OAAO5B,OAAQ,SAGlH,SAAC,IAAG,CAACd,KAAM,EAAE,UACT,SAAC,SAAS,CAACsC,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAU,CAAC5G,OAAO,cAAc1B,SAAU,SAACwB,GAAQoF,EAAa,CAAEtB,KAAM9D,GAAK,EAAGqF,MAAOpF,IAAW,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAMyG,MAAOO,UAAU,eAG9H,SAAC,IAAG,CAACE,KAAM,GAAG,UACV,SAAC,SAAS,CAACsC,MAAM,UAAS,UACtB,SAAC,aAAc,CAACM,KAAM,EAAGC,KAAM,EAAG/B,MAAOhI,EAAKgK,QAAS7I,SAAU,SAACgG,GAAC,OAAKY,EAAa,CAAEiC,QAAS7C,EAAEyC,OAAO5B,OAAQ,kBAWrJ,IAEMiF,IAAiBxF,EAAAA,EAAAA,aAAW,SAACjH,EAAOsG,GACtC,IAAQhD,EAA0BtD,EAA1BsD,KAAMgC,EAAoBtF,EAApBsF,gBACd,GAAwBlE,EAAAA,EAAAA,WAAS,GAAM,eAAhC8F,EAAI,KAAEC,EAAO,KACpB,GAAgC/F,EAAAA,EAAAA,UAAS,IAAG,eAArCkJ,EAAQ,KAAEC,EAAW,KAC5B,GAA0CnJ,EAAAA,EAAAA,WAAS,GAAM,eAAlDiG,EAAa,KAAEC,EAAgB,KACtC,GAA8ClG,EAAAA,EAAAA,WAAS,GAAM,eAAtDuL,EAAe,KAAEC,EAAkB,MAG1C3E,EAAAA,EAAAA,qBAAoB3B,GAAK,iBAAO,CAC5BpD,SAAQ,SAACgF,GACLf,GAAQ,GACRoD,EAAY,GAChB,EACH,KAsBD5F,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACU,EAAP,QAAf,EAAI2F,EAAS,UAAE,OAAX,EAAaH,KACb5K,EAAAA,oBAA4B,CAAE4K,IAAgB,QAAb,EAAEG,EAAS,UAAE,aAAX,EAAaH,IAAK7E,gBAAAA,IAAmB/B,MAAK,SAAAC,GAAQ,IAAD,GAC5C,QAAhC,EAAAA,EAAIhE,KAAKqN,+BAAuB,aAAhC,EAAkC5I,QAAS,EAC3C6I,EAAqBtJ,EAAIhE,KAAKqN,0BAE9B5L,EAAAA,GAAAA,QAAgBuC,EAAIvC,SACpB2L,GAAmB,GAE3B,IAAGjJ,OAAM,SAAAC,GACL3C,EAAAA,GAAAA,QAAgB2C,EAAI3C,QACxB,GAER,GAAG,CAACqJ,IAEJ,IAAMwC,EAAuB,SAACD,GAC1BE,EAAAA,EAAAA,QAAc,CACV7N,MAAO,yBACP4D,MAAM,SAACkK,GAAA,EAAuB,IAC9BC,SAAS,iCACL,uBAAG,4CAECJ,EAAwBpJ,KAAI,SAACtB,EAAG4F,GAAC,OAAM,SAAC,IAAG,CAAC6B,MAAM,MAAK,SAAUzH,GAAJ4F,EAAY,OAGjFrF,OAAQ,iBACRwK,OAAQ,SACRvK,WAAY,SACZ0F,KAAI,WACAuE,GAAmB,EACvB,EACApE,SAAQ,WAAK,GAErB,EAEA,OACI,+BACI,SAAC,IAAK,CACFtJ,MAAM,oBACN+F,MAAO,CAAEmD,IAAK,IACdlB,KAAMA,EACNxE,OAAO,OACP8F,SAAU,WAAQrB,GAAQ,EAAQ,EAClCsB,cAAc,EACdvG,MAAO,IACP8H,gBAAc,EACdxD,UAAU,0BACVlC,OAAQ,EACJ,SAAC,IAAM,CAAcrB,QAAS,WAAQkE,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAY7H,KAAK,UAAU2D,QArErC,WAAO,IAAD,EAC0B,EAA1B,QAAX,EAAAqH,EAAS,UAAE,OAAX,EAAaH,KAAOwC,IACpBrF,GAAiB,GACjB/H,EAAAA,eAAuB,CAAE4K,IAAgB,QAAb,EAAEG,EAAS,UAAE,aAAX,EAAaH,IAAK7E,gBAAAA,IAAmB/B,MAAK,SAACC,GACrE1C,EAAQ0C,EAAIvC,SACZqC,IACA6D,GAAQ,EACZ,IAAGxD,OAAM,SAAAC,GACsB,kBAAhBA,EAAI3C,QAEXH,EADS8C,EAAI3C,QAAQ6D,OAAOC,KAAKnB,EAAI3C,SAAS,IAClC,SAEZH,EAAQ8C,EAAI3C,QAAS,QAE7B,IAAG4C,SAAQ,WACPyD,GAAiB,EACrB,IAER,EAmDiEiB,UAAWoE,GAAmBtF,EAAc,SAAC,QAAlF,SACd,UAEF,SAAC,GAAS,CAAOiD,SAAAA,EAAUC,YAAAA,EAAeC,MAAO,OAIjE,IC/be,SAAS2C,KAEpB,OACI,+BACI,SAAC,IAAM,CAAClI,MAAO,CAAEmI,UAAW,SAAW,UACnC,UAAC,IAAM,CAAC5G,UAAU,cAAa,WAC3B,SAAC,WAAa,CAAEvB,MAAO,CAAEoI,QAAS,EAAGC,OAAQ,QAAS,UAClD,SAAC,IAAI,CAACC,MAAM,OAAOC,KAAK,aAAaC,MAAO,CACxC,CACIzE,OAAO,SAAC,KAAI,CAAC3J,GAAI,gBAAgB,SAAC,iBAClCqE,IAAK,gBAET,CACIsF,OAAO,SAAC,KAAI,CAAC3J,GAAI,kBAAkB,SAAC,mBACpCqE,IAAK,kBAET,CACIsF,OAAO,SAAC,KAAI,CAAC3J,GAAI,YAAY,SAAC,aAC9BqE,IAAK,YAET,CACIsF,OAAO,SAAC,KAAI,CAAC3J,GAAI,oBAAoB,SAAC,sBACtCqE,IAAK,oBAET,CACIsF,OAAO,SAAC,KAAI,CAAC3J,GAAI,qBAAqB,SAAC,uBACvCqE,IAAK,qBAET,CACIsF,MAAgB,OAAT0E,EAAAA,QAAS,IAATA,EAAAA,GAAAA,EAAAA,EAAAA,KAAkBA,EAAAA,EAAAA,KAAiB,MAC1ChK,IAAK,UACLiK,SAAU,CACN,CACIjK,IAAK,UACLsF,MAAO,WAEX,CACItF,IAAK,SACLb,QAAQ,EACRmG,MAAO,SACP/F,QAAS,WAAQoJ,OAAOuB,aAAaC,QAASxB,OAAOC,SAASwB,QAAU,WAQ5F,SAAC,YAAc,WACX,SAAC,IAAI,CAAC7I,MAAO,CAAE8I,aAAc,QAAS,UAClC,UAAC,KAAM,YACH,SAAC,KAAK,CAAC3B,KAAK,eAAe4B,SAAS,SAAC,EAAW,OAChD,SAAC,KAAK,CAAC5B,KAAK,iBAAiB4B,SAAU,SAAC,EAAa,OACrD,SAAC,KAAK,CAAC5B,KAAK,WAAW4B,SAAU,SAACvE,EAAO,OACzC,SAAC,KAAK,CAAC2C,KAAK,mBAAmB4B,SAAU,SAAC7B,GAAW,CAAC7G,gBAAgB,cACtE,SAAC,KAAK,CAAC8G,KAAK,oBAAoB4B,SAAU,SAAC7B,GAAW,CAAC7G,gBAAgB,aACvE,SAAC,KAAK,CAAC8G,KAAM,IAAK4B,SAAS,SAAChP,EAAQ,mBASpE,C","sources":["views/pages/errors/Error404.js","views/pages/SalesReport.js","views/pages/BillingReport.js","services/account.js","views/components/Pagination.js","utils/Antd.js","services/transaction.js","views/pages/AccountTransaction.js","views/pages/Account.js","services/file.js","utils/UploadCSV.js","views/pages/Transaction.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nconst SalesReport = () => {\r\n  return (\r\n    <div>SalesReport</div>\r\n  )\r\n}\r\n\r\nexport default SalesReport","import React from 'react'\r\n\r\nconst BillingReport = () => {\r\n  return (\r\n    <div>BillingReport</div>\r\n  )\r\n}\r\n\r\nexport default BillingReport","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'account';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        // if (type === 'string') {\r\n        //     props.onChange(values?.join());\r\n        // } else {\r\n        props.onChange(values)\r\n        // }\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'transation';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static saveFromCSVUrl(data) {\r\n        return axios.post(this.baseURL + \"/csv-upload\", data);\r\n    }\r\n    static checkPrevTransation(data) {\r\n        return axios.post(this.baseURL + \"/check-prev-transation\", data);\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\n\r\nexport default function AccountTransaction({ accountId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Account Name',\r\n            dataIndex: 'accountDetail',\r\n            render: (data) => data?.name\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 150,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Bill Number',\r\n            dataIndex: 'billNumber',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, accounts }} />,\r\n        size: 'small',\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    useEffect(() => {\r\n        serviceAccount.list({ isAll: 1 })\r\n            .then(res => {\r\n                setAccounts(res.data);\r\n            })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data.filter(v => v.transactionType === \"credit\") : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n                expandable={{\r\n                    expandedRowRender: (record) => (\r\n                        data.map(v => {\r\n                            if (v.transactionType === \"debit\") {\r\n                                return (\r\n                                    <div\r\n                                        style={{\r\n                                            marginLeft: \"5rem\",\r\n                                            marginBottom:\"1rem\"\r\n                                        }}\r\n                                    >\r\n                                        <span style={{marginRight:\"2rem\"}}>{v.accountDetail.name}</span>\r\n                                        <span style={{marginRight:\"2rem\"}}>{moment(v.date).format('DD MMM YYYY')}</span>\r\n                                        <span style={{marginRight:\"2rem\"}}>{v.amount}</span>\r\n                                        <span style={{marginRight:\"2rem\"}}>{v.billNumber}</span>\r\n                                        <span style={{marginRight:\"2rem\"}}>{v.transactionType}</span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n                    ),\r\n                    rowExpandable: (record) => record.name !== 'Not Expandable',\r\n                }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, accounts }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, accounts }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10}>\r\n\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, accounts } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Account Id\" required>\r\n                                    <Select value={data.accountId} onChange={v => { handleChange({ accountId: v }) }} >\r\n                                        {\r\n                                            accounts.map(item => <Select.Option value={item._id} key={item._id}>{item.name}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Bill Number\" required>\r\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Account Recievable\" required>\r\n                                    <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Date\" required>\r\n                                    <DatePicker format='DD MMM YYYY' onChange={(v) => { handleChange({ date: v }) }} value={moment(data?.date)} className=\"w-100\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Transaction Type\" required>\r\n                                    <Select value={data.transactionType} onChange={v => { handleChange({ transactionType: v }) }} >\r\n                                        <Select.Option value={\"credit\"} >Credit</Select.Option>\r\n                                        <Select.Option value={\"debit\"} >Debit</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Comment\">\r\n                                    <Input.TextArea cols={8} rows={6} value={data.comment} onChange={(e) => handleChange({ comment: e.target.value })}></Input.TextArea>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport AccountTransaction from './AccountTransaction';\r\n\r\nexport default function Account({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const transactionModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Initial Amount',\r\n            dataIndex: 'initialAmount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: (_, row) => {\r\n                if (row.status === \"opened\") {\r\n                    return <Tag color='green'>Opened</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Closed</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 110,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} style={{ marginRight: \"4px\" }} />\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of  Accounts</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\r\n            <TransactionModal ref={transactionModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => { setData({ ...data, ...value }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Initial Amount\" required>\r\n                                    <Input type='number' defaultValue={0} value={data.initialAmount} onChange={(e) => handleChange({ initialAmount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value=\"opened\">Opened</Select.Option>\r\n                                        <Select.Option value=\"closed\">Closed</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst TransactionModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <AccountTransaction accountId={data} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadAudio({ fileList, setFileList, count = 1, disabled = false }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    return <Upload\r\n        accept=\"text/csv\"\r\n        customRequest={uploadImage}\r\n        onChange={handleOnChange}\r\n        onRemove={handleRemove}\r\n        listType=\"picture\"\r\n        fileList={fileList}\r\n        className=\"image-upload-grid\"\r\n        disabled={disabled}\r\n        onPreview={(file) => {\r\n            return fetch(file.url, {\r\n                method: 'GET',\r\n            })\r\n                .then(res => res.json())\r\n                .then(({ thumbnail }) => {\r\n                    return thumbnail;\r\n                });\r\n        }}\r\n    >\r\n        {\r\n            fileList?.length >= count\r\n                ? null\r\n                : <Button icon={<UploadOutlined />} type=\"dashed\" danger style={{ margin: 30, width: \"134%\"}}>Upload CSV File</Button>\r\n        }\r\n    </Upload >\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, message, Timeline, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, UploadOutlined, ExclamationCircleFilled } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\nimport UploadCSV from '../../utils/UploadCSV';\r\n\r\nexport default function Transaction({ transactionType = \"credit\" }) {\r\n    const path = window.location.pathname.split('/')[2];\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, transactionType });\r\n    const addNewModalRef = useRef();\r\n    const uploadCsvModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Account Name',\r\n            dataIndex: 'accountDetail',\r\n            render: (data) => data?.name\r\n        },\r\n        {\r\n            title: 'Receivable Account',\r\n            dataIndex: 'accountRecievable',\r\n            width: 250,\r\n            hidden: transactionType === 'debit'\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 150,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Bill Number',\r\n            dataIndex: 'billNumber',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        setQData({ ...qData, transactionType: path === \"sales-transaction\" ? \"debit\" : \"credit\" })\r\n    }, [path])\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit, qData.transactionType]);\r\n    \r\n\r\n    useEffect(() => {\r\n        serviceAccount.list({ isAll: 1 })\r\n            .then(res => {\r\n                setAccounts(res.data);\r\n            })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, accounts }} />\r\n            <UploadCsvModal ref={uploadCsvModalRef} transactionType={transactionType} list={list} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select placeholder=\"Choose a account\" value={qData.accountId} onChange={v => { setQData({ ...qData, accountId: v }) }} allowClear>\r\n                            {\r\n                                accounts.map(v => (\r\n                                    <Select.Option value={v._id} key={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right', marginRight: \"1rem\" }}>\r\n                            <Button type=\"primary\" icon={<UploadOutlined />} onClick={() => { uploadCsvModalRef.current.openForm() }}>Upload File (CSV)</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, accounts } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Account Id\" required>\r\n                                    <Select value={data.accountId} onChange={v => { handleChange({ accountId: v }) }} >\r\n                                        {\r\n                                            accounts.map(item => <Select.Option value={item._id} key={item._id}>{item.name}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Bill Number\" required>\r\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Account Recievable\" required>\r\n                                    <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Date\" required>\r\n                                    <DatePicker format='DD MMM YYYY' onChange={(v) => { handleChange({ date: v }) }} value={moment(data?.date)} className=\"w-100\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Comment\">\r\n                                    <Input.TextArea cols={8} rows={6} value={data.comment} onChange={(e) => handleChange({ comment: e.target.value })}></Input.TextArea>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst UploadCsvModal = forwardRef((props, ref) => {\r\n    const { list, transactionType } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [confirmDeletion, setConfirmDeletion] = useState(false);\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setFileList([]);\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        if (fileList[0]?.url && confirmDeletion) {\r\n            setAjxRequesting(true);\r\n            service.saveFromCSVUrl({ url: fileList[0]?.url, transactionType }).then((res) => {\r\n                AntdMsg(res.message);\r\n                list();\r\n                setOpen(false);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileList[0]?.url) {\r\n            service.checkPrevTransation({ url: fileList[0]?.url, transactionType }).then(res => {\r\n                if (res.data.alreadyExistedDataDates?.length > 0) {\r\n                    confirmDeletionModal(res.data.alreadyExistedDataDates);\r\n                } else {\r\n                    message.success(res.message);\r\n                    setConfirmDeletion(true);\r\n                }\r\n            }).catch(err => {\r\n                message.warning(err.message);\r\n            })\r\n        }\r\n    }, [fileList])\r\n\r\n    const confirmDeletionModal = (alreadyExistedDataDates) => {\r\n        Modal.confirm({\r\n            title: 'Records Already exists',\r\n            icon: <ExclamationCircleFilled />,\r\n            content: <>\r\n                <p>Records will be deleted on these dates </p>\r\n                {\r\n                    alreadyExistedDataDates.map((v, i) => (<Tag color=\"red\" key={i}>{v}</Tag>))\r\n                }\r\n            </>,\r\n            okText: 'Delete Records',\r\n            okType: 'danger',\r\n            cancelText: 'Cancel',\r\n            onOk() {\r\n                setConfirmDeletion(true);\r\n            },\r\n            onCancel() { },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Upload File (CSV)\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save} disabled={!confirmDeletion || ajxRequesting}>Save</Button>,\r\n                ]}\r\n            >\r\n                <UploadCSV {...{ fileList, setFileList }} count={1} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport commonObj from \"../../commonObj\";\r\nimport SalesReport from \"../pages/SalesReport\";\r\nimport BillingReport from \"../pages/BillingReport\";\r\nimport Account from \"../pages/Account\";\r\nimport Transaction from \"../pages/Transaction\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header  style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n                            {\r\n                                label: <Link to={'/sales-report'}>Sales Report</Link>,\r\n                                key: \"sales-report\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/billing-report'}>Billing Report</Link>,\r\n                                key: \"billing-report\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/accounts'}>Accounts</Link>,\r\n                                key: \"accounts\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/bill-transaction'}>Bill Transactions</Link>,\r\n                                key: \"bill-transaction\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/sales-transaction'}>Sales Transactions</Link>,\r\n                                key: \"sales-transaction\"\r\n                            },\r\n                            {\r\n                                label: commonObj?.name ? commonObj.name : 'You',\r\n                                key: 'profile',\r\n                                children: [\r\n                                    {\r\n                                        key: 'Profile',\r\n                                        label: 'Profile',\r\n                                    },\r\n                                    {\r\n                                        key: 'Logout',\r\n                                        danger: true,\r\n                                        label: 'Logout',\r\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n                                <Route path=\"sales-report\" element={<SalesReport />} />\r\n                                <Route path=\"billing-report\" element={ <BillingReport /> } />\r\n                                <Route path=\"accounts\" element={ <Account /> } />\r\n                                <Route path=\"bill-transaction\" element={ <Transaction transactionType=\"credit\" /> } />\r\n                                <Route path=\"sales-transaction\" element={ <Transaction transactionType=\"debit\" /> } />\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","AccountTransaction","accountId","useState","setData","loading","setLoading","selected","setSelected","accounts","setAccounts","addNewModalRef","useRef","columns","dataIndex","render","name","width","v","moment","format","row","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","onClick","openForm","filter","item","hidden","list","then","res","map","key","catch","err","finally","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","serviceAccount","isAll","Object","keys","level","style","margin","pagination","position","dataSource","transactionType","scroll","y","x","expandable","expandedRowRender","record","marginLeft","marginBottom","marginRight","accountDetail","date","amount","billNumber","rowExpandable","AddForm","ref","onSubmitCapture","className","gutter","span","e","startTime","Date","endTime","htmlType","float","forwardRef","open","setOpen","aspect","ajxRequesting","setAjxRequesting","handleChange","value","entries","forEach","ent","varDt","k","split","i","parseInt","useImperativeHandle","dt","save","top","onOk","okButtonProps","disabled","onCancel","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","placeholder","min","target","accountRecievable","cols","rows","comment","Account","transactionModalRef","_","color","EyeOutlined","TransactionModal","detail","destroyOnClose","defaultValue","initialAmount","url","config","UploadAudio","fileList","setFileList","count","uploadImage","options","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","accept","customRequest","fl","onRemove","listType","onPreview","fetch","method","json","thumbnail","UploadOutlined","Transaction","path","window","location","pathname","uploadCsvModalRef","UploadCsvModal","allowClear","confirmDeletion","setConfirmDeletion","alreadyExistedDataDates","confirmDeletionModal","Modal","ExclamationCircleFilled","content","okType","MyLayout","minHeight","padding","height","theme","mode","items","commonObj","children","localStorage","clear","reload","borderRadius","element"],"sourceRoot":""}