{"version":3,"file":"static/js/238.c42bd575.chunk.js","mappings":"6OAIe,SAASA,IACpB,OACI,SAAC,KAAM,CACHC,OAAO,MACPC,MAAM,MACNC,SAAS,8CACTC,OAAO,SAAC,KAAI,CAACC,GAAG,IAAG,UAAC,SAAC,IAAM,CAACC,KAAK,UAAS,SAAC,iBAGvD,C,cCLA,EANoB,WAClB,OACE,yBAAK,eAET,E,8JCJqBC,EAAO,wCAgCvB,OAhCuB,iCAIxB,SAAYC,GACR,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,QAAS,CAAEC,OAAQJ,GACvD,GAAC,oBACD,SAAcK,EAAIL,GACd,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,YAAYE,EAAI,CAAED,OAAQJ,GAC9D,GAAC,kBACD,SAAYA,GACR,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,QAASH,EAC9C,GAAC,2BACD,SAAqBA,GACjB,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,kBAAmBH,EACxD,GAAC,oBACD,SAAcK,GACV,OAAOJ,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,UAAW,CAAEG,IAAKD,GACvD,GAAC,4BACD,SAAsBL,GAClB,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,cAAeH,EACpD,GAAC,iCACD,SAA2BA,GACvB,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,yBAA0BH,EAC/D,GAAC,4BAED,SAAsBA,GAClB,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,oBAAqB,CAAEC,OAAQJ,GACnE,GAAC,wBAED,SAAkBA,GACd,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,eAAgB,CAAEC,OAAQJ,GAC9D,KAAC,EAhCuB,GAAPD,EAEVI,QAAU,aCJc,IAEdJ,EAAO,wCAevB,OAfuB,iCAIxB,SAAYC,GACR,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,QAAS,CAAEC,OAAQJ,GACvD,GAAC,oBACD,SAAcK,EAAIL,GACd,OAAOC,EAAAA,EAAAA,IAAUC,KAAKC,QAAU,YAAYE,EAAI,CAAED,OAAQJ,GAC9D,GAAC,kBACD,SAAYA,GACR,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,QAASH,EAC9C,GAAC,oBACD,SAAcK,GACV,OAAOJ,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,UAAW,CAAEG,IAAKD,GACvD,KAAC,EAfuB,GAAPN,EAEVI,QAAU,U,cCHN,SAASI,EAAaC,GACjC,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAef,OACI,8BAEQD,EAAME,MAAQ,GACR,SAAC,IAAU,CACTA,MAAOF,EAAME,MACbC,UAXF,WACd,IAAIC,GAASJ,EAAMK,KAAO,GAAKL,EAAMM,MAAQ,EAAI,EAC7CC,EAAMP,EAAMK,KAAOL,EAAMM,MAC7B,OAAO,SAAC,IAAG,UAAE,WAAaF,EAAQ,MAAQG,EAAM,WAAaP,EAAME,OACvE,EAQoBM,SAAUR,EAAMM,MAChBG,QAAST,EAAMK,KACfK,SAtBC,SAACL,EAAMM,GACpBX,EAAMM,QAAUK,EAChBV,GAAS,kBAAKD,GAAK,IAAEK,KAAM,EAAGC,MAAOK,KAErCV,GAAS,kBAAKD,GAAK,IAAEK,KAAMA,IAEnC,EAiBoBO,iBAAiB,IAEnB,MAItB,C,iCCwGO,SAASC,EAAQC,GAA0B,IAApBC,EAAK,uDAAG,UAC9BD,IACc,YAAVC,GACAC,EAAAA,GAAAA,QAAgBF,GACN,UAAVC,GACAC,EAAAA,GAAAA,MAAcF,GACJ,YAAVC,GACAC,EAAAA,GAAAA,QAAgBF,GAE5B,CAWA,I,uFCnJe,SAASG,EAAmB,GAAuB,IAAD,IAApBC,UAAAA,OAAS,MAAG,KAAI,EAEzD,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCI,EAAQ,KAAEC,EAAW,KAC5B,GAA0BL,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,GAAIY,UAAAA,IAAY,eAA9DlB,EAAK,KAAEC,EAAQ,KAChBwB,GAAiBC,EAAAA,EAAAA,UAGjBC,EAAU,CACZ,CACI1C,MAAO,IACP2C,MAAO,GACPC,OAAQ,SAACC,EAAGC,EAAKC,GAAC,OAAK,uBAAIA,EAAI,GAAM,GAEzC,CACI/C,MAAO,OACPgD,UAAW,OACXJ,OAAQ,SAAAC,GAAC,OAAII,IAAOJ,GAAGK,OAAO,cAAc,GAEhD,CACIlD,MAAO,cACPgD,UAAW,aACXL,MAAO,KAEX,CACI3C,MAAO,QACPgD,UAAW,SACXL,MAAO,IACPC,OAAQ,SAACC,EAAGC,GAAG,MAA6B,UAAxBA,EAAIK,gBAA8BN,EAAEO,QAAQ,GAAK,EAAE,GAE3E,CACIpD,MAAO,SACPgD,UAAW,SACXL,MAAO,IACPC,OAAQ,SAACC,EAAGC,GAAG,MAA6B,WAAxBA,EAAIK,gBAA+BN,EAAEO,QAAQ,GAAK,EAAE,GAE5E,CACIpD,MAAO,UACPgD,UAAW,uBACXL,MAAO,IAEPC,OAAQ,SAACC,EAAGC,GACpB,IAAMO,IAAgE,GAAxDP,EAAIQ,qBAAuBR,EAAIS,sBAA4BH,QAAQ,GACjF,OAAOC,EAAM,IAAK,SAAC,IAAG,CAACG,MAAM,MAAK,UAAC,uBAAIH,MAAiBA,GAAO,IAAK,SAAC,IAAG,CAACG,MAAM,OAAM,UAAC,uBAAIH,OAAiB,SAAC,IAAG,CAACG,MAAM,QAAO,UAAC,uBAAIH,KACnI,GAEK,CACIrD,MAAO,SACPgD,UAAW,oBACXL,MAAO,IACPC,OAAQ,SAACC,EAAGC,GAAG,MAA6B,UAAxBA,EAAIK,gBAA8B,OAASN,CAAC,GAEpE,CACI7C,MAAO,SACPgD,UAAW,MACXL,MAAO,GACPC,OAAQ,SAACC,EAAGC,GACR,OAAO,iCAEC,UAAC,IAAU,CACP9C,MAAM,oCACNyD,UAAW,WAAQC,EAAWZ,EAAIa,IAAM,EACxCC,OAAO,MACPC,WAAW,KAAI,WAEf,SAAC,IAAM,CAACzD,KAAK,UAAU0D,KAAK,QAAQC,QAAM,EAACC,MAAM,SAACC,EAAA,EAAc,MAAO,WAI3E,SAAC,IAAM,CAAC7D,KAAK,UAAU0D,KAAK,QAAQE,MAAM,SAACE,EAAA,EAAY,IAAKC,QAAS,WAAQ3B,EAAehB,QAAQ4C,SAAStB,EAAIa,IAAK,MAGlI,IAENU,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACLnC,GAAW,GACXhC,EAAQoE,WAAW1D,GAAO2D,MAAK,SAAAC,GAAQ,IAAD,EAClCxC,EAAgB,QAAT,EAACwC,EAAIrE,YAAI,aAAR,EAAUsE,KAAI,SAAC/B,GAAC,yBAAWA,GAAC,IAAEgC,IAAKhC,EAAEc,KAAG,KAChD3C,GAAS,kBAAKD,GAAK,IAAEM,MAAOsD,EAAIzE,MAAMmB,MAAOD,KAAMuD,EAAIzE,MAAMkB,KAAMH,MAAO0D,EAAIzE,MAAMe,QACxF,IAAG6D,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WACzB3C,GAAW,EACf,GACJ,CAEA,IAAMqB,EAAa,SAAC/C,GAChBN,EAAAA,OAAeM,GAAI+D,MAAK,SAAAC,GACpB/C,EAAQ+C,EAAI5C,SACZyC,IACAjC,EAAY,GAChB,IAAGuC,OAAM,SAAAC,GACLnD,EAAQmD,EAAIhD,QAAS,QACzB,GACJ,EAEMkD,EAAevC,EAAQkC,KAAI,SAACN,GAAI,yBAAWA,GAAI,IAAEY,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CACfC,UAAU,EACVlD,QAAAA,EACApC,MAAO,kBAAM,SAACuF,EAAM,CAAO/C,eAAAA,EAAgBF,SAAAA,EAAUoB,WAAAA,EAAY3C,MAAAA,EAAOC,SAAAA,EAAUwD,KAAAA,GAAU,EAC5FV,KAAM,QACN0B,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAO1E,MAAAA,EAAOC,SAAAA,GAAc,EACrD0E,aAAc,CACVjE,SAAU,SAACkE,GACPpD,EAAYoD,EAChB,GAEJC,iBAAaC,GAOjB,OAJAC,EAAAA,EAAAA,YAAU,WACNtB,GACJ,GAAG,CAACzD,EAAMK,KAAML,EAAMM,SAGlB,iCACI,SAAC,UAAgB,CAAC0E,MAAO,EAAGC,MAAO,CAAEC,OAAQ,GAAI,SAAC,2BAElD,SAAC,KAAK,kBACEZ,GAAU,IACda,WAAY,CAAEC,SAAU,CAAC,QAAS5E,SAAUR,EAAMM,OAClDqB,QAASuC,EACTmB,WAAY9F,EAAK8E,OAAS9E,EAAO,GACjC+F,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,2BAE3C,SAACC,EAAO,CAACC,IAAKjE,EAAsBgC,KAAAA,EAAMvC,UAAAA,MAGtD,CAEA,SAASsD,EAAO,GAAkE,IAAhE/C,EAAc,EAAdA,eAAgBF,EAAQ,EAARA,SAAUoB,EAAU,EAAVA,WAAY3C,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUwD,EAAI,EAAJA,KAErE,OACI,SAAC,IAAI,CAACkC,gBAAiBlC,EAAMmC,UAAU,cAAa,UAChD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,gBAAsB,CAAC5D,OAAO,cAAczB,SAAU,SAACsF,GAAQ/F,GAAS,kBAAKD,GAAK,IAAEiG,UAAW,IAAIC,KAAKF,EAAE,IAAKG,QAAS,IAAID,KAAKF,EAAE,MAAO,SAGnJ,SAAC,IAAG,CAACF,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,IAAM,CAAC1G,KAAK,UAAU+G,SAAS,SAAQ,SAAC,gBAGjD,UAAC,IAAG,CAACN,KAAM,GAAG,WAEN,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,EAAGM,MAAO,SAAU,UAClD,SAAC,IAAM,CAAChH,KAAK,UAAU4D,MAAM,SAAC,IAAY,IAAKG,QAAS,WAAQ3B,EAAehB,QAAQ4C,UAAW,EAAE,SAAC,cAIzG9B,EAAS8C,QACH,SAAC,IAAU,CACTpF,MAAM,8CACNyD,UAAW,WAAQC,EAAWpB,EAAW,EACzCsB,OAAO,MACPC,WAAW,KAAI,UAEf,SAAC,IAAM,CAACzD,KAAK,UAAU2D,QAAM,EAACiC,MAAO,CAAEoB,MAAO,SAAWpD,MAAM,SAACC,EAAA,EAAc,IAAI,SAAC,sBAErF,YAO9B,CAEA,IAAMuC,GAAUa,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GAC/B,IAAQjC,EAAoB1D,EAApB0D,KAAMvC,EAAcnB,EAAdmB,UACd,GAAwBC,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KACpB,GAAwBrF,EAAAA,EAAAA,UAAS,CAAEsF,OAAQ,IAAI,eAAxClH,EAAI,KAAE6B,EAAO,KACpB,GAA0CD,EAAAA,EAAAA,WAAS,GAAM,eAAlDuF,EAAa,KAAEC,EAAgB,KAGhCC,EAAe,SAACC,GAClBC,OAAOC,QAAQF,GAAOG,SAAQ,SAAAC,GAK1B,IAJA,IAAIC,EAAQ3H,EACN4H,EAAIF,EAAI,GACRnF,EAAImF,EAAI,GACVG,EAAOD,EAAEE,MAAM,KACVrF,EAAI,EAAGA,EAAIoF,EAAK/C,OAAQrC,IACzBA,EAAI,IAAMoF,EAAK/C,OACf6C,EAAME,EAAKpF,IAAMF,GAEa,qBAAnBoF,EAAME,EAAKpF,MACU,EAAxBsF,SAASF,EAAKpF,EAAI,KAAW,EAC7BkF,EAAME,EAAKpF,IAAM,GAEjBkF,EAAME,EAAKpF,IAAM,CAAC,GAExBkF,EAAQA,EAAME,EAAKpF,IAGjC,IACAZ,GAAQ,UAAK7B,GACjB,GAEAgI,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC5BrC,SAAQ,SAACmE,GACLhB,GAAQ,GACRpF,EACIoG,EACM,CAAE5E,IAAK4E,GACP,CAAEtG,UAAAA,EAAWuG,KAAM,IAAIvB,MAErC,EACH,IAED,IAYMwB,EAAO,WACTf,GAAiB,GACjBrH,EAAQoI,KAAKnI,GAAMoE,MAAK,SAACC,GACrB/C,EAAQ+C,EAAI5C,SACZ4F,GAAa,UAAKhD,EAAIrE,OACtBkE,IACA+C,GAAQ,EACZ,IAAGzC,OAAM,SAAAC,GACsB,kBAAhBA,EAAIhD,QAEXH,EADSmD,EAAIhD,QAAQ8F,OAAOM,KAAKpD,EAAIhD,SAAS,IAClC,SAEZH,EAAQmD,EAAIhD,QAAS,QAE7B,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,GAEJ,EAQA,OANA5B,EAAAA,EAAAA,YAAU,WACFxF,EAAKqD,MAhCT+D,GAAiB,GACjBrH,EAAQqI,OAAOpI,EAAKqD,KAAKe,MAAK,SAAAC,GAC1BgE,QAAQC,IAAIjE,EAAIrE,MAChB6B,EAAQwC,EAAIrE,MAAQ,CAAC,EACzB,IAAGwE,OAAM,SAAAC,GACLnD,EAAQmD,EAAIhD,QAAS,QACzB,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,IA2BJ,GAAG,CAACpH,EAAKqD,IAAK2D,KAGV,+BACI,SAAC,IAAK,CACFtH,OAASM,EAAKqD,IAAc,OAAR,OAAkB,oBACtCqC,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OACPkF,KAAML,EACNM,cAAe,CAAEC,SAAUvB,GAC3BwB,SAAU,WAAQ1B,GAAQ,EAAQ,EAElC2B,cAAc,EACdvG,MAAO,IACPgE,UAAU,0BACVlB,OAAQ,EACJ,SAAC,IAAM,CAActB,QAAS,WAAQoD,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAYnH,KAAK,UAAU+D,QAASsE,EAAK,SAAC,QAArC,SACd,UAEF,SAAC,IAAI,CAACU,SAAU1B,EAAe2B,WAAW,SAACC,EAAA,EAAe,CAACrD,MAAO,CAAEsD,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,IAAI,CAACC,OAAO,WAAU,UACnB,UAAC,IAAG,CAAC5C,OAAQ,CAAC,EAAG,GAAG,WAChB,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,mBAAmBC,UAAQ,YACxC,UAAC,IAAM,CAAC9B,MAAOtH,EAAK6C,gBAAiB1B,SAAU,SAAAoB,GAAO8E,EAAa,CAAExE,gBAAiBN,GAAK,EAAE,WACzF,SAAC,WAAa,CAAC+E,MAAO,SAAS,SAAE,UACjC,SAAC,WAAa,CAACA,MAAO,QAAQ,SAAE,iBAI5C,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,SAASC,UAAQ,YAC9B,SAAC,IAAK,CAACC,YAAY,eAAevJ,KAAK,SAASwJ,IAAK,EAAGhC,MAAOtH,EAAKuJ,OAAQpI,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEkC,OAAQ9C,EAAE+C,OAAOlC,OAAQ,SAG7I,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,cAAcC,UAAQ,YACnC,SAAC,IAAK,CAACC,YAAY,oBAAoB/B,MAAOtH,EAAKyJ,WAAYtI,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEoC,WAAYhD,EAAE+C,OAAOlC,OAAQ,QAIvG,WAAzBtH,EAAK6C,iBACC,SAAC,IAAG,CAAC0D,KAAM,GAAG,UACZ,SAAC,SAAS,CAAC4C,MAAM,qBAAqBC,UAAQ,YAC1C,SAAC,IAAK,CAAC9B,MAAOtH,EAAK0J,kBAAmBvI,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEqC,kBAAmBjD,EAAE+C,OAAOlC,OAAQ,QAGhH,KAGmB,UAAzBtH,EAAK6C,iBACC,SAAC,IAAG,CAAC0D,KAAM,GAAG,UACZ,SAAC,SAAS,CAAC4C,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAK,CAACC,YAAY,kBAAkB/B,MAAOtH,EAAKF,KAAMqB,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEvH,KAAM2G,EAAE+C,OAAOlC,OAAQ,QAGpH,MAEV,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAU,CACPxG,OAAO,cACPzB,SAAU,SAACoB,GAAQ8E,EAAa,CAAEa,KAAM,IAAIvB,KAAKpE,IAAM,EACvD+E,MAAOqC,IAAMhH,IAAO3C,EAAKkI,MAAMtF,OAAO,cAAe,cACrDyD,UAAU,wBAUlD,ICzUe,SAASuD,EAAc,GAAiC,IAAD,IAA9B/G,gBAAAA,OAAe,MAAG,SAAQ,EAC3DgH,EAAOC,OAAOC,SAASC,SAASlC,MAAM,KAAK,GACjD,GAAwBlG,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCqI,EAAQ,KAAEC,EAAW,KAC5B,GAA0BtI,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,GAAI8B,gBAAAA,IAAkB,eAApEpC,EAAK,KAAEC,EAAQ,KAChBwB,GAAiBC,EAAAA,EAAAA,UACjBgI,GAAsBhI,EAAAA,EAAAA,UAEtBC,EAAU,CACf,CACC1C,MAAO,IACP2C,MAAO,GACPC,OAAQ,SAACC,EAAGC,EAAKC,GAAC,OAAK,uBAAIA,EAAI,GAAM,GAEtC,CACC/C,MAAO,eACPgD,UAAW,iBACXJ,OAAQ,SAACtC,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMoK,IAAI,GAE7B,CACC1K,MAAO,OACPgD,UAAW,OACXL,MAAO,IACPC,OAAQ,SAAAC,GAAC,OAAII,IAAOJ,GAAGK,OAAO,cAAc,GAE7C,CACClD,MAAO,cACPgD,UAAW,aACXL,MAAO,KAER,CACC3C,MAAO,cACPgD,UAAW,SACXL,MAAO,IACPC,OAAQ,SAAAC,GAAC,OAAI,uBAAIA,EAAEO,QAAQ,IAAO,GAEnC,CACCpD,MAAO,kBACPgD,UAAW,6BACXL,MAAO,IACPC,OAAQ,SAACC,GAAC,OAAO,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG8H,QAAO,SAACC,EAAKC,GAAE,OAAKD,EAAMC,EAAGhB,MAAM,GAAE,IAAIzG,QAAQ,EAAE,GAEvE,CACCpD,MAAO,aACPgD,UAAW,6BACXL,MAAO,IACPC,OAAQ,SAACC,EAAGiI,GAAC,OAAMA,EAAEjB,QAAU,OAADhH,QAAC,IAADA,OAAC,EAADA,EAAG8H,QAAO,SAACC,EAAKC,GAAE,OAAKD,EAAMC,EAAGhB,MAAM,GAAE,KAAIzG,QAAQ,EAAE,GAErF,CACCpD,MAAO,UACPgD,UAAW,UACXL,MAAO,IACPC,OAAQ,SAACC,EAAGC,GACX,IAAMO,GAAsB,EAAhBR,EAAEO,QAAQ,GACtB,OAAOC,EAAM,IAAK,SAAC,IAAG,CAACG,MAAM,MAAK,UAAC,uBAAIH,MAAiBA,GAAO,IAAK,SAAC,IAAG,CAACG,MAAM,OAAM,UAAC,uBAAIH,OAAiB,SAAC,IAAG,CAACG,MAAM,QAAO,UAAC,uBAAIH,KACnI,GAWD,CACCrD,MAAO,UACPgD,UAAW,MACXL,MAAO,IACPC,OAAQ,SAACgF,EAAO9E,GACf,OAAO,+BACN,SAAC,cAAoB,CACpBkD,MAAO,CAACc,aAAc,OACtBiE,SAAU,CACTC,QAAS,wBACTvJ,SAAU,SAACwJ,GACV,IACC5K,EAAQ6K,cAAc,CAAEvH,IAAKb,EAAIa,IAAKwH,QAASF,IAAWvG,MAAK,SAAAC,GAC9D/C,EAAQ,mBACRO,EAAQ7B,EAAKsE,KAAI,SAAA/B,GAChB,OAAGA,EAAEc,MAAQb,EAAIa,KACT,QAAC,UAAId,GAAC,IAAEsI,QAASF,IAEjBpI,CAET,IACD,GAED,CADE,MAAOkC,GACT,CACD,GACC,SAEDjC,EAAIqI,WAGR,GAED,CACUnL,MAAO,SACPgD,UAAW,MACXL,MAAO,GACPC,OAAQ,SAACC,EAAGC,GAAG,OAAK,SAAC,IAAM,CAAC1C,KAAK,UAAU0D,KAAK,QAAQE,MAAM,SAACoH,EAAA,EAAW,IAAKjH,QAAS,WAAQsG,EAAoBjJ,QAAQ4C,SAAStB,EAAIb,UAAW,GAAK,IAElKoC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACRnC,GAAW,GACXhC,EAAQgL,eAAetK,GAAO2D,MAAK,SAAAC,GAAQ,IAAD,EACzCxC,EAAgB,QAAT,EAACwC,EAAIrE,YAAI,aAAR,EAAUsE,KAAI,SAAC/B,EAAGE,GAAC,yBAAWF,GAAC,IAAEgC,IAAKhC,EAAEZ,UAAYc,GAAC,KAC7D/B,GAAS,kBAAKD,GAAK,IAAEM,MAAOsD,EAAIzE,MAAMmB,MAAOD,KAAMuD,EAAIzE,MAAMkB,KAAMH,MAAO0D,EAAIzE,MAAMe,QACrF,IAAG6D,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WAC5B3C,GAAW,EACZ,GACD,CAEA,IAAMqB,EAAa,SAAC/C,GACnBN,EAAAA,OAAeM,GAAI+D,MAAK,SAAAC,GACvB/C,EAAQ+C,EAAI5C,SACZyC,GACD,IAAGM,OAAM,SAAAC,GACRnD,EAAQmD,EAAIhD,QAAS,QACtB,GACD,EAEMkD,EAAevC,EAAQkC,KAAI,SAACN,GAAI,yBAAWA,GAAI,IAAEY,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CAClBC,UAAU,EACVlD,QAAAA,EACA0B,KAAM,QACN9D,MAAO,kBAAM,SAAC,EAAM,CAAOwC,eAAAA,EAAgBkB,WAAAA,EAAY3C,MAAAA,EAAOC,SAAAA,EAAUwD,KAAAA,EAAM+F,SAAAA,GAAc,EAC5F/E,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAO1E,MAAAA,EAAOC,SAAAA,GAAc,EACrD4E,iBAAaC,GA0Bd,OAxBAC,EAAAA,EAAAA,YAAU,WACT9E,GAAS,kBAAKD,GAAK,IAAEoC,gBAA0B,sBAATgH,EAA+B,QAAU,WAChF,GAAG,CAACA,KAEJrE,EAAAA,EAAAA,YAAU,WACTtB,GACD,GAAG,CAACzD,EAAMK,KAAML,EAAMM,MAAON,EAAMoC,mBAGnC2C,EAAAA,EAAAA,YAAU,WACTwF,EAAAA,KAAoB,CAAEC,MAAO,IAC3B7G,MAAK,SAAAC,GACL6F,EAAY7F,EAAIrE,KACjB,IACCwE,OAAM,SAAAC,GACqB,kBAAhBA,EAAIhD,QAEdH,EADSmD,EAAIhD,QAAQ8F,OAAOM,KAAKpD,EAAIhD,SAAS,IAClC,SAEZH,EAAQmD,EAAIhD,QAAS,QAEvB,GACF,GAAG,KAGF,iCACC,SAAC,UAAgB,CAACgE,MAAO,EAAGC,MAAO,CAAEC,OAAQ,GAAI,SAAC,0BAElD,SAAC,KAAK,kBACDZ,GAAU,IACda,WAAY,CAAEC,SAAU,CAAC,QAAS5E,SAAUR,EAAMM,OAClDqB,QAASuC,EAETmB,WAAY9F,EAAK8E,OAAS9E,EAAO,GACjC+F,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,uBACvCiF,WAAY,CACXC,cAAe,SAACC,GAAM,OAAK,CAAI,EAC/BC,kBAAmB,SAACD,GAAM,OACzB,+BACC,gBAAK1F,MAAO,CAAE4F,QAAS,OAAQC,cAAe,eAAgB,UAC7D,SAAC,IACA,CACAvG,UAAQ,EAERY,YAAY,EACZpC,KAAK,QACLsC,WAAU,kBACNsF,EAAOI,4BAA0B,CAEpC,CAAEtD,KAAM,QAASrF,gBAAiB,WAEnCT,QAAS,CACR,CACC1C,MAAO,OACPgD,UAAW,OACX+I,MAAO,OACPpJ,MAAO,IACPC,OAAQ,SAAAC,GAAC,MAAU,UAANA,EAAgBI,IAAOJ,GAAGK,OAAO,gBAAiB,uBAAG,SAAS,GAE5E,CACClD,MAAO,OACPgD,UAAW,SACXL,MAAO,IACPoJ,MAAO,QACPnJ,OAAQ,SAACC,EAAGC,GACX,MAAI,CAAC,SAAU,SAASkJ,SAASlJ,EAAIK,iBACL,WAAxBL,EAAIK,gBAA+BN,EAAEO,QAAQ,GAAK,GAClC,UAAbN,EAAI0F,MACP,wBAAsC,QAAlC,EAACkD,EAAOI,kCAA0B,aAAjC,EAAmCnB,QAAO,SAACC,EAAKC,GAAE,OAAKD,EAAMC,EAAGhB,MAAM,GAAE,IAAIzG,QAAQ,UAD1F,EAA2B,IAAD,CAGlC,GAED,CACCpD,MAAO,UACPgD,UAAW,oBACX+I,MAAO,OACPpJ,MAAO,WAQT,OAKN,SAAC,EAAO,CAAC8D,IAAKjE,EAAsBgC,KAAAA,EAAM+F,SAAAA,KAC1C,SAAC0B,GAAgB,CAACxF,IAAKgE,MAG1B,CAEA,SAASlF,EAAO,GAAgB,EAAd/C,eAAoD,IAApCzB,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUwD,EAAI,EAAJA,KAAM+F,EAAQ,EAARA,SAExD,OACC,SAAC,IAAI,CAAC7D,gBAAiBlC,EAAMmC,UAAU,cAAa,UACnD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACpB,SAAC,IAAG,CAACC,KAAM,EAAE,UACZ,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UACrC,SAAC,IAAM,CACN6C,YAAY,mBACZuC,YAAU,EACVtE,MAAO7G,EAAMkB,UACbR,SAAU,SAAAoB,GAAO7B,GAAS,kBAAKD,GAAK,IAAEkB,UAAWY,IAAK,EACtDsJ,YAAU,EACVC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAM,aACb,QAAd,EAAO,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ9C,aAAK,QAAI,IAAI+C,cAAcR,SAASM,EAAME,cAAc,EAElEC,QAAiB,OAARlC,QAAQ,IAARA,OAAQ,EAARA,EAAU3F,KAAI,SAAA/B,GAAC,MAAK,CAAE4G,MAAO5G,EAAE6H,KAAM9C,MAAO/E,EAAEc,IAAK,WAI/D,SAAC,IAAG,CAACkD,KAAM,EAAE,UACZ,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UACrC,SAAC,gBAAsB,CAAC5D,OAAO,cAAczB,SAAU,SAACsF,GAAQ/F,GAAS,kBAAKD,GAAK,IAAE2L,UAAW,IAAIzF,KAAKF,EAAE,IAAK4F,QAAS,IAAI1F,KAAKF,EAAE,MAAO,SAG7I,SAAC,IAAG,CAACF,KAAM,EAAE,UACZ,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UACrC,SAAC,IAAM,CAAC1G,KAAK,UAAU+G,SAAS,SAAQ,SAAC,gBAG3C,SAAC,IAAG,CAACN,KAAM,SAKf,CAEA,IAAML,GAAUa,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GAClC,OAAwBvE,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KASpB,OANAe,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC/BrC,SAAQ,SAACmE,GACRhB,GAAQ,EACT,EACA,KAGA,+BACC,SAAC,IAAK,CACLvH,MAAO,iBACPgG,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OAGPqF,SAAU,WAAQ1B,GAAQ,EAAQ,EAElC2B,cAAc,EACdvG,MAAO,IACPgE,UAAU,0BACVlB,OAAQ,QAKZ,IAGMwG,IAAmB5E,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GACxC,OAAwBvE,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KACpB,GAAwBrF,EAAAA,EAAAA,UAAS,CAAEsF,OAAQ,IAAI,eAAxClH,EAAI,KAAE6B,EAAO,KAQpB,OANAmG,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC5BrC,SAAQ,SAACmE,GACLhB,GAAQ,GACRpF,EAAQoG,EACZ,EACH,KAEG,+BACI,SAAC,IAAK,CACFvC,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OACPqF,SAAU,WAAQ1B,GAAQ,EAAQ,EAClC2B,cAAc,EACdvG,MAAO,KACPiK,gBAAc,EACdjG,UAAU,0BACVlB,OAAQ,KAAK,UAEb,SAACzD,EAAkB,CAACC,UAAW3B,OAI/C,IC9Ue,SAASuM,GAAQ,GAAW,IAATzM,EAAI,EAAJA,KAE9B,GAAwB8B,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCI,EAAQ,KAAEC,EAAW,KAC5B,GAA0BL,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,KAAK,eAAnDN,EAAK,KAAEC,EAAQ,KAChBwB,GAAiBC,EAAAA,EAAAA,UACjBgI,GAAsBhI,EAAAA,EAAAA,UAGtBC,EAAU,CACZ,CACI1C,MAAO,IACP2C,MAAO,GACPC,OAAQ,SAACC,EAAGC,EAAKC,GAAC,OAAK,uBAAIA,EAAI,GAAM,GAEzC,CACI/C,MAAO,OACPgD,UAAW,QAGf,CACIhD,MAAO,iBACPgD,UAAW,gBACXL,MAAO,KAEX,CACI3C,MAAO,SACPgD,UAAW,SACXL,MAAO,GACPC,OAAQ,SAACkK,EAAGhK,GACR,MAAmB,WAAfA,EAAI/C,QACG,SAAC,IAAG,CAACyD,MAAM,QAAO,SAAC,YAEnB,SAAC,IAAG,CAACA,MAAM,MAAK,SAAC,UAEhC,GAEJ,CACIxD,MAAO,SACPgD,UAAW,MACXL,MAAO,IACPC,OAAQ,SAACC,EAAGC,GACR,OAAO,iCAEC,UAAC,IAAU,CACP9C,MAAM,4CACNyD,UAAW,WAAQC,EAAWZ,EAAIa,IAAM,EACxCC,OAAO,MACPC,WAAW,KAAI,WAEf,SAAC,IAAM,CAACzD,KAAK,UAAU0D,KAAK,QAAQC,QAAM,EAACC,MAAM,SAACC,EAAA,EAAc,MAAO,WAI3E,SAAC,IAAM,CAAC7D,KAAK,UAAU0D,KAAK,QAAQE,MAAM,SAACE,EAAA,EAAY,IAAKC,QAAS,WAAQ3B,EAAehB,QAAQ4C,SAAStB,EAAIa,IAAK,EAAGqC,MAAO,CAAE+G,YAAa,UAG/I,SAAC,IAAM,CAAC3M,KAAK,UAAU0D,KAAK,QAAQE,MAAM,SAACoH,EAAA,EAAW,IAAKjH,QAAS,WAAQsG,EAAoBjJ,QAAQ4C,SAAStB,EAAIa,IAAK,MAGtI,IAENU,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACLnC,GAAW,GACXhC,EAAAA,KAAaU,GAAO2D,MAAK,SAAAC,GAAQ,IAAD,EAC5BxC,EAAgB,QAAT,EAACwC,EAAIrE,YAAI,aAAR,EAAUsE,KAAI,SAAC/B,GAAC,yBAAWA,GAAC,IAAEgC,IAAKhC,EAAEc,KAAG,KAChD3C,GAAS,kBAAKD,GAAK,IAAEM,MAAOsD,EAAIzE,MAAMmB,MAAOD,KAAMuD,EAAIzE,MAAMkB,KAAMH,MAAO0D,EAAIzE,MAAMe,QACxF,IAAG6D,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WACzB3C,GAAW,EACf,GACJ,CAEA,IAAMqB,EAAa,SAAC/C,GAChBN,EAAAA,OAAeM,GAAI+D,MAAK,SAAAC,GACpB/C,EAAQ+C,EAAI5C,SACZyC,IACAjC,EAAY,GAChB,IAAGuC,OAAM,SAAAC,GACLnD,EAAQmD,EAAIhD,QAAS,QACzB,GACJ,EAEMkD,EAAevC,EAAQkC,KAAI,SAACN,GAAI,yBAAWA,GAAI,IAAEY,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CACfC,UAAU,EACVlD,QAAAA,EACA0B,KAAM,QACN9D,MAAO,kBAAM,SAAC,GAAM,CAAOwC,eAAAA,EAAgBF,SAAAA,EAAUoB,WAAAA,EAAY3C,MAAAA,EAAOC,SAAAA,EAAUwD,KAAAA,GAAU,EAC5FgB,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAO1E,MAAAA,EAAOC,SAAAA,GAAc,EACrD0E,aAAc,CACVjE,SAAU,SAACkE,GACPpD,EAAYoD,EAChB,GAEJC,iBAAaC,GAOjB,OAJAC,EAAAA,EAAAA,YAAU,WACNtB,GACJ,GAAG,CAACzD,EAAMK,KAAML,EAAMM,SAGlB,iCACI,SAAC,UAAgB,CAAC0E,MAAO,EAAGC,MAAO,CAAEC,OAAQ,GAAI,SAAC,uBAElD,SAAC,KAAK,kBACEZ,GAAU,IACda,WAAY,CAAEC,SAAU,CAAC,QAAS5E,SAAUR,EAAMM,OAClDqB,QAASuC,EACTmB,WAAY9F,EAAK8E,OAAS9E,EAAO,GACjC+F,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,2BAE3C,SAAC,GAAO,CAACE,IAAKjE,EAAsBgC,KAAAA,EAAMpE,KAAAA,KAC1C,SAAC,GAAgB,CAACqG,IAAKgE,MAInC,CAEA,SAASlF,GAAO,GAAkE,IAAhE/C,EAAc,EAAdA,eAAgBF,EAAQ,EAARA,SAAUoB,EAAU,EAAVA,WAAY3C,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUwD,EAAI,EAAJA,KAIrE,OACI,SAAC,IAAI,CAACkC,gBAAiBlC,EAAMmC,UAAU,cAAa,UAChD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,IAAK,CAAC6C,YAAY,iBAAiBlI,SAAU,SAACsF,GAAQ/F,GAAS,kBAAKD,GAAK,IAAE8D,IAAKkC,EAAE+C,OAAOlC,QAAS,SAG3G,SAAC,IAAG,CAACf,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,IAAM,CAAC1G,KAAK,UAAU+G,SAAS,SAAQ,SAAC,gBAGjD,UAAC,IAAG,CAACN,KAAM,EAAE,WAEL,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,EAAGM,MAAO,SAAU,UAClD,SAAC,IAAM,CAAChH,KAAK,UAAU4D,MAAM,SAAC,IAAY,IAAKG,QAAS,WAAQ3B,EAAehB,QAAQ4C,UAAW,EAAE,SAAC,cAIzG9B,EAAS8C,QACH,SAAC,IAAU,CACTpF,MAAM,8CACNyD,UAAW,WAAQC,EAAWpB,EAAW,EACzCsB,OAAO,MACPC,WAAW,KAAI,UAEf,SAAC,IAAM,CAACzD,KAAK,UAAU2D,QAAM,EAACiC,MAAO,CAAEoB,MAAO,SAAWpD,MAAM,SAACC,EAAA,EAAc,IAAI,SAAC,sBAErF,YAO9B,CAEA,IAAMuC,IAAUa,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GAC/B,IAAQjC,EAAS1D,EAAT0D,KACR,GAAwBtC,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KACpB,GAAwBrF,EAAAA,EAAAA,UAAS,CAAEsF,OAAQ,IAAI,eAAxClH,EAAI,KAAE6B,EAAO,KACpB,GAA0CD,EAAAA,EAAAA,WAAS,GAAM,eAAlDuF,EAAa,KAAEC,EAAgB,KAEhCC,EAAe,SAACC,GAAYzF,GAAQ,kBAAK7B,GAASsH,GAAU,GAElEU,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC5BrC,SAAQ,SAACmE,GACLhB,GAAQ,GACRpF,EACIoG,EACM,CAAE5E,IAAK4E,GACP,CAAExI,QAAQ,GAExB,EACH,IAED,IAYM0I,EAAO,WACTf,GAAiB,GACjBrH,EAAAA,KAAaC,GAAMoE,MAAK,SAACC,GACrB/C,EAAQ+C,EAAI5C,SACZ4F,GAAa,UAAKhD,EAAIrE,OACtBkE,GACJ,IAAGM,OAAM,SAAAC,GACsB,kBAAhBA,EAAIhD,QAEXH,EADSmD,EAAIhD,QAAQ8F,OAAOM,KAAKpD,EAAIhD,SAAS,IAClC,SAEZH,EAAQmD,EAAIhD,QAAS,QAE7B,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,GAEJ,EAcA,OAZA5B,EAAAA,EAAAA,YAAU,WACFxF,EAAKqD,MA/BT+D,GAAiB,GACjBrH,EAAAA,OAAeC,EAAKqD,KAAKe,MAAK,SAAAC,GAC1BxC,EAAQwC,EAAIrE,MAAQ,CAAC,EAEzB,IAAGwE,OAAM,SAAAC,GACLnD,EAAQmD,EAAIhD,QAAS,QACzB,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,IA0BJ,GAAG,CAACpH,EAAKqD,OAETmC,EAAAA,EAAAA,YAAU,WACDwB,GACDnF,EAAQ,CAAEwB,IAAK,MAEvB,GAAG,CAAC2D,KAGA,+BACI,SAAC,IAAK,CACFtH,OAASM,EAAKqD,IAAc,OAAR,OAAkB,gBACtCqC,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OACPkF,KAAML,EACNM,cAAe,CAAEC,SAAUvB,GAC3BwB,SAAU,WAAQ1B,GAAQ,EAAQ,EAClCqF,gBAAc,EACd1D,cAAc,EACdvG,MAAO,IACPgE,UAAU,0BACVlB,OAAQ,EACJ,SAAC,IAAM,CAActB,QAAS,WAAQoD,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAYnH,KAAK,UAAU+D,QAASsE,EAAK,SAAC,QAArC,SACd,UAEF,SAAC,IAAI,CAACU,SAAU1B,EAAe2B,WAAW,SAACC,EAAA,EAAe,CAACrD,MAAO,CAAEsD,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,IAAI,CAACC,OAAO,WAAU,UACnB,UAAC,IAAG,CAAC5C,OAAQ,CAAC,EAAG,GAAG,WAChB,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAK,CAACC,YAAY,aAAa/B,MAAOtH,EAAKoK,KAAMjJ,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAE+C,KAAM3D,EAAE+C,OAAOlC,OAAQ,SAGjH,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,iBAAiBC,UAAQ,YACtC,SAAC,IAAK,CAACtJ,KAAK,SAAS4M,aAAc,EAAGpF,MAAOtH,EAAK2M,cAAexL,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEsF,cAAelG,EAAE+C,OAAOlC,OAAQ,SAGzI,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,SAASC,UAAQ,YAC9B,UAAC,IAAM,CAAC9B,MAAOtH,EAAKP,OAAQ0B,SAAU,SAAAoB,GAAO8E,EAAa,CAAE5H,OAAQ8C,GAAK,EAAE,WACvE,SAAC,WAAa,CAAC+E,MAAM,SAAQ,SAAC,YAC9B,SAAC,WAAa,CAACA,MAAM,SAAQ,SAAC,4BAUtE,IAGMqE,IAAmB5E,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GACxC,OAAwBvE,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KACpB,GAAwBrF,EAAAA,EAAAA,UAAS,CAAEsF,OAAQ,IAAI,eAAxClH,EAAI,KAAE6B,EAAO,KAQpB,OANAmG,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC5BrC,SAAQ,SAACmE,GACLhB,GAAQ,GACRpF,EAAQoG,EACZ,EACH,KAEG,+BACI,SAAC,IAAK,CACFvC,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OACPqF,SAAU,WAAQ1B,GAAQ,EAAQ,EAClC2B,cAAc,EACdvG,MAAO,KACPiK,gBAAc,EACdjG,UAAU,0BACVlB,OAAQ,KAAK,UAEb,SAACzD,EAAkB,CAACC,UAAW3B,OAI/C,I,sDC1TqBD,GAAO,wCAavB,OAbuB,gCAIxB,SAAW6M,GACP,OAAO3M,EAAAA,EAAAA,IAAU,MAAQ2M,EAC7B,GAAC,kBAED,SAAY5M,EAAM6M,GACd,OAAO5M,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,QAASH,EAAM6M,EACpD,GAAC,oBACD,SAAc7M,GACV,OAAOC,EAAAA,EAAAA,KAAWC,KAAKC,QAAU,UAAWH,EAChD,KAAC,EAbuB,GCKb,SAAS8M,GAAY,GAAyD,IAAvDC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAY,EAAD,EAAEC,MAAAA,OAAK,MAAG,EAAC,MAAEvE,SAAAA,OAAQ,OAAQ,EAC9EwE,EAAW,2CAAG,WAAMf,GAAO,uFACrBgB,EAAyChB,EAAzCgB,UAAWC,EAA8BjB,EAA9BiB,QAASC,EAAqBlB,EAArBkB,KAAMC,EAAenB,EAAfmB,WAE5BC,EAAS,IAAIC,SACbX,EAAS,CAAEY,iBAAkB,SAAAC,GAAWJ,EAAW,CAAEK,QAAUD,EAAME,OAASF,EAAM/M,MAAS,KAAQ,GAC3G4M,EAAOM,OAAO,OAAQR,GACtB,IACIS,GAAAA,KAAiBP,EAAQV,GAAQzI,MAAK,SAAAC,GAClC8I,EAAU,MACVH,EAAY,GAAD,eAAKD,GAAQ,CAAE,CAAEgB,IAAK1J,EAAIrE,KAAK+N,IAAKnB,IAAKvI,EAAIrE,KAAK4M,IAAKxC,KAAM/F,EAAIrE,KAAKoK,QACrF,GAGJ,CAFE,MAAO3F,GACL2I,EAAQ,CAAE3I,IAAAA,GACd,CAAC,2CACJ,gBAdgB,sCA6BjB,OAAO,SAAC,KAAM,CACVuJ,OAAO,WACPC,cAAef,EACf/L,SAhBmB,SAAH,GAAU,EAAJkM,KAAgB,IAAVa,EAAE,EAAFA,UACjBA,UAAc,KACrBA,EAAK,IAETlB,EAAYkB,EAEhB,EAWIC,SAViB,SAACd,GAClBS,GAAAA,OAAmB,CAAEC,IAAKV,EAAKU,MAAO3J,MAAK,SAAAC,GACvC,GAER,EAOI+J,SAAS,UACTrB,SAAUA,EACV1G,UAAU,oBACVqC,SAAUA,EACV2F,UAAW,SAAChB,GACR,OAAOiB,MAAMjB,EAAKT,IAAK,CACnB2B,OAAQ,QAEPnK,MAAK,SAAAC,GAAG,OAAIA,EAAImK,MAAM,IACtBpK,MAAK,YACF,OADc,EAATqK,SAET,GACR,EAAE,UAGU,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAUjI,SAAUmI,EACd,MACA,SAAC,IAAM,CAACvJ,MAAM,SAACgL,GAAA,EAAc,IAAK5O,KAAK,SAAS2D,QAAM,EAACiC,MAAO,CAAEC,OAAQ,GAAItD,MAAO,QAAQ,SAAC,qBAI9G,CCnDe,SAASsM,GAAY,GAAiC,IAAD,IAA9B9L,gBAAAA,OAAe,MAAG,SAAQ,EACtDgH,EAAOC,OAAOC,SAASC,SAASlC,MAAM,KAAK,GACjD,GAAwBlG,EAAAA,EAAAA,UAAS,IAAG,eAA7B5B,EAAI,KAAE6B,EAAO,KACpB,GAA8BD,EAAAA,EAAAA,WAAS,GAAM,eAAtCE,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCI,EAAQ,KAAEC,EAAW,KAC5B,GAAgCL,EAAAA,EAAAA,UAAS,IAAG,eAArCqI,EAAQ,KAAEC,EAAW,KAC5B,GAA0BtI,EAAAA,EAAAA,UAAS,CAAEd,KAAM,EAAGC,MAAO,GAAI8B,gBAAAA,IAAkB,eAApEpC,EAAK,KAAEC,EAAQ,KAChBwB,GAAiBC,EAAAA,EAAAA,UACjByM,GAAoBzM,EAAAA,EAAAA,UAEpBC,EAAU,CACZ,CACI1C,MAAO,eACPgD,UAAW,gBACXJ,OAAQ,SAACtC,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMoK,IAAI,GAEhC,CACI1K,MAAO,qBACPgD,UAAW,oBACXL,MAAO,IACP4B,OAA4B,UAApBpB,GAEZ,CACInD,MAAO,OACPgD,UAAW,OACXL,MAAO,IACPC,OAAQ,SAAAC,GAAC,OAAII,IAAOJ,GAAGK,OAAO,cAAc,GAEhD,CACIlD,MAAO,SACPgD,UAAW,SACXL,MAAO,KAEX,CACI3C,MAAO,cACPgD,UAAW,aACXL,MAAO,KAEX,CACI3C,MAAO,SACPgD,UAAW,MACXL,MAAO,GACPC,OAAQ,SAACC,EAAGC,GACR,OAAO,iCAEC,UAAC,IAAU,CACP9C,MAAM,4CACNyD,UAAW,WAAQC,EAAWZ,EAAIa,IAAM,EACxCC,OAAO,MACPC,WAAW,KAAI,WAEf,SAAC,IAAM,CAACzD,KAAK,UAAU0D,KAAK,QAAQC,QAAM,EAACC,MAAM,SAACC,EAAA,EAAc,MAAO,WAI3E,SAAC,IAAM,CAAC7D,KAAK,UAAU0D,KAAK,QAAQE,MAAM,SAACE,EAAA,EAAY,IAAKC,QAAS,WAAQ3B,EAAehB,QAAQ4C,SAAStB,EAAIa,IAAK,MAGlI,IAENU,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAE7B,SAASC,IACLnC,GAAW,GACXhC,EAAQmE,KAAKzD,GAAO2D,MAAK,SAAAC,GAAQ,IAAD,EAC5BxC,EAAgB,QAAT,EAACwC,EAAIrE,YAAI,aAAR,EAAUsE,KAAI,SAAC/B,GAAC,yBAAWA,GAAC,IAAEgC,IAAKhC,EAAEc,KAAG,KAChD3C,GAAS,kBAAKD,GAAK,IAAEM,MAAOsD,EAAIzE,MAAMmB,MAAOD,KAAMuD,EAAIzE,MAAMkB,KAAMH,MAAO0D,EAAIzE,MAAMe,QACxF,IAAG6D,OAAM,SAAAC,GAAS,IAAGC,SAAQ,WACzB3C,GAAW,EACf,GACJ,CAEA,IAAMqB,EAAa,SAAC/C,GAChBN,EAAAA,OAAeM,GAAI+D,MAAK,SAAAC,GACpB/C,EAAQ+C,EAAI5C,SACZyC,IACAjC,EAAY,GAChB,IAAGuC,OAAM,SAAAC,GACLnD,EAAQmD,EAAIhD,QAAS,QACzB,GACJ,EAEMkD,EAAevC,EAAQkC,KAAI,SAACN,GAAI,yBAAWA,GAAI,IAAEY,UAAU,GAAK,IAEtED,EAAa,GAAGE,OAAQ,EACxBF,EAAaA,EAAaG,OAAS,GAAGD,MAAQ,QAE9C,IAAME,EAAa,CACfC,UAAU,EACVlD,QAAAA,EACA0B,KAAM,QACN9D,MAAO,kBAAM,SAAC,GAAM,CAAOwC,eAAAA,EAAgB0M,kBAAAA,EAAmB5M,SAAAA,EAAUoB,WAAAA,EAAY3C,MAAAA,EAAOC,SAAAA,EAAUwD,KAAAA,EAAM+F,SAAAA,GAAc,EACzH/E,YAAY,EACZC,OAAQ,kBAAM,SAAC,EAAU,CAAO1E,MAAAA,EAAOC,SAAAA,GAAc,EACrD0E,aAAc,CACVjE,SAAU,SAACkE,GACPpD,EAAYoD,EAChB,GAEJC,iBAAaC,GA2BjB,OAzBAC,EAAAA,EAAAA,YAAU,WACN9E,GAAS,kBAAKD,GAAK,IAAEoC,gBAA0B,sBAATgH,EAA+B,QAAU,WACnF,GAAG,CAACA,KAEJrE,EAAAA,EAAAA,YAAU,WACNtB,GACJ,GAAG,CAACzD,EAAMK,KAAML,EAAMM,MAAON,EAAMoC,mBAGnC2C,EAAAA,EAAAA,YAAU,WACNwF,EAAAA,KAAoB,CAAEC,MAAO,IACxB7G,MAAK,SAAAC,GACF6F,EAAY7F,EAAIrE,KACpB,IACCwE,OAAM,SAAAC,GACwB,kBAAhBA,EAAIhD,QAEXH,EADSmD,EAAIhD,QAAQ8F,OAAOM,KAAKpD,EAAIhD,SAAS,IAClC,SAEZH,EAAQmD,EAAIhD,QAAS,QAE7B,GACR,GAAG,KAIC,iCACI,UAAC,UAAgB,CAACgE,MAAO,EAAGC,MAAO,CAAEC,OAAQ,GAAI,UAAC,WAA6B,UAApB9C,EAA8B,OAAS,UAAU,oBAE5G,SAAC,KAAK,kBACEkC,GAAU,IACda,WAAY,CAAEC,SAAU,CAAC,QAAS5E,SAAUR,EAAMM,OAClDqB,QAASuC,EACTmB,WAAY9F,EAAK8E,OAAS9E,EAAO,GACjC+F,OAAQ,CAAEC,EAAG,sBAAuBC,EAAG,2BAE3C,SAAC,GAAO,CAACE,IAAKjE,EAAsBgC,KAAAA,EAAM+F,SAAAA,EAAUpH,gBAAAA,KACpD,SAACgM,GAAc,CAAC1I,IAAKyI,EAAmB/L,gBAAiBA,EAAiBqB,KAAMA,MAG5F,CAEA,SAASe,GAAO,GAA+F,IAA7F/C,EAAc,EAAdA,eAAgB0M,EAAiB,EAAjBA,kBAAmB5M,EAAQ,EAARA,SAAUoB,EAAU,EAAVA,WAAY3C,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUwD,EAAI,EAAJA,KAAM+F,EAAQ,EAARA,SAE9F,GAAsCrI,EAAAA,EAAAA,UAAS,IAAG,eAA3CkN,EAAW,KAAEC,EAAc,KAqBlC,OAXAvJ,EAAAA,EAAAA,YAAU,WACN,IAAM8E,EAAc,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAU3F,KAAI,SAACN,GAAI,MAC3B,CACImF,MAAOnF,EAAKoG,KACZ9C,MAAOtD,EAAKX,IACf,IAGL0L,EAAezE,EACnB,GAAG,CAACL,KAGA,SAAC,IAAI,CAAC7D,gBAAiBlC,EAAMmC,UAAU,cAAa,UAChD,UAAC,IAAG,CAACC,OAAQ,CAAC,GAAI,GAAG,WACjB,SAAC,IAAG,CAACC,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,IAAM,CACHoF,YAAU,EACVC,YAAU,EACVxC,YAAY,oBACZyC,iBAAiB,WACjB3K,SAAU,SAACsF,GAAC,OA9BlBlE,EA8BgCkE,EA7B9ChG,EADiB8D,EA8BgC,aA7BpChC,YACHgD,IAANhD,IACA9B,EAAM8D,GAAO,GACbL,MAJS,IAAC3B,EAAGgC,CA8B4C,EACzCwH,aAAc,SAACC,EAAOC,GAAM,aACV,QAAd,EAAO,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ9C,aAAK,QAAI,IAAI+C,cAAcR,SAASM,EAAME,cAAc,EAErEC,QAAS2C,SAIrB,SAAC,IAAG,CAACvI,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,gBAAsB,CAAC5D,OAAO,cAAczB,SAAU,SAACsF,GAAQ/F,GAAS,kBAAKD,GAAK,IAAEiG,UAAW,IAAIC,KAAKF,EAAE,IAAKG,QAAS,IAAID,KAAKF,EAAE,MAAO,SAGnJ,SAAC,IAAG,CAACF,KAAM,EAAE,UACT,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,GAAI,UAClC,SAAC,IAAM,CAAC1G,KAAK,UAAU+G,SAAS,SAAQ,SAAC,gBAGjD,UAAC,IAAG,CAACN,KAAM,GAAG,WAEN,SAAC,SAAS,CAACb,MAAO,CAAEc,aAAc,EAAGM,MAAO,SAAU,UAClD,SAAC,IAAM,CAAChH,KAAK,UAAU4D,MAAM,SAAC,IAAY,IAAKG,QAAS,WAAQ3B,EAAehB,QAAQ4C,UAAW,EAAE,SAAC,eAIzG,SAAC,SAAS,CAAC4B,MAAO,CAAEc,aAAc,EAAGM,MAAO,QAAS2F,YAAa,QAAS,UACvE,SAAC,IAAM,CAAC3M,KAAK,UAAU4D,MAAM,SAACgL,GAAA,EAAc,IAAK7K,QAAS,WAAQ+K,EAAkB1N,QAAQ4C,UAAW,EAAE,SAAC,wBAI9G9B,EAAS8C,QACH,SAAC,IAAU,CACTpF,MAAM,8CACNyD,UAAW,WAAQC,EAAWpB,EAAW,EACzCsB,OAAO,MACPC,WAAW,KAAI,UAEf,SAAC,IAAM,CAACzD,KAAK,UAAU2D,QAAM,EAACiC,MAAO,CAAEoB,MAAO,SAAWpD,MAAM,SAACC,EAAA,EAAc,IAAI,SAAC,sBAErF,YAO9B,CFxOqB5D,GAEVI,QAAU,OEwOrB,IAAM+F,IAAUa,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GAC/B,IAAQjC,EAAoC1D,EAApC0D,KAAM+F,EAA8BzJ,EAA9ByJ,SAAUpH,EAAoBrC,EAApBqC,gBACxB,GAAwBjB,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KACpB,GAAwBrF,EAAAA,EAAAA,UAAS,CAAEsF,OAAQ,IAAI,eAAxClH,EAAI,KAAE6B,EAAO,KACpB,GAA0CD,EAAAA,EAAAA,WAAS,GAAM,eAAlDuF,EAAa,KAAEC,EAAgB,KAGhCC,EAAe,SAACC,GAClBC,OAAOC,QAAQF,GAAOG,SAAQ,SAAAC,GAK1B,IAJA,IAAIC,EAAQ3H,EACN4H,EAAIF,EAAI,GACRnF,EAAImF,EAAI,GACVG,EAAOD,EAAEE,MAAM,KACVrF,EAAI,EAAGA,EAAIoF,EAAK/C,OAAQrC,IACzBA,EAAI,IAAMoF,EAAK/C,OACf6C,EAAME,EAAKpF,IAAMF,GAEa,qBAAnBoF,EAAME,EAAKpF,MACU,EAAxBsF,SAASF,EAAKpF,EAAI,KAAW,EAC7BkF,EAAME,EAAKpF,IAAM,GAEjBkF,EAAME,EAAKpF,IAAM,CAAC,GAExBkF,EAAQA,EAAME,EAAKpF,IAGjC,IACAZ,GAAQ,UAAK7B,GACjB,GAEAgI,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC5BrC,SAAQ,SAACmE,GACLhB,GAAQ,GACRpF,EACIoG,EACM,CAAE5E,IAAK4E,GACP,CAAEpF,gBAAAA,GAEhB,EACH,IAED,IAYMsF,EAAO,WACTf,GAAiB,GACjBrH,EAAQoI,KAAKnI,GAAMoE,MAAK,SAACC,GACrB/C,EAAQ+C,EAAI5C,SACZ4F,GAAa,UAAKhD,EAAIrE,OACtBkE,GACJ,IAAGM,OAAM,SAAAC,GACsB,kBAAhBA,EAAIhD,QAEXH,EADSmD,EAAIhD,QAAQ8F,OAAOM,KAAKpD,EAAIhD,SAAS,IAClC,SAEZH,EAAQmD,EAAIhD,QAAS,QAE7B,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,GAEJ,GAEA5B,EAAAA,EAAAA,YAAU,WACFxF,EAAKqD,MA/BT+D,GAAiB,GACjBrH,EAAQqI,OAAOpI,EAAKqD,KAAKe,MAAK,SAAAC,GAC1BxC,EAAQwC,EAAIrE,MAAQ,CAAC,EAEzB,IAAGwE,OAAM,SAAAC,GACLnD,EAAQmD,EAAIhD,QAAS,QACzB,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,IA0BJ,GAAG,CAACpH,EAAKqD,OAETmC,EAAAA,EAAAA,YAAU,WACDwB,GACDnF,EAAQ,CAAEwB,IAAK,MAEvB,GAAG,CAAC2D,IAEJ,OAAsCpF,EAAAA,EAAAA,UAAS,IAAG,eAA3CkN,EAAW,KAAEC,EAAc,KAgBlC,OAbAvJ,EAAAA,EAAAA,YAAU,WACN,IAAM8E,EAAc,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAU3F,KAAI,SAACN,GAAI,MAC3B,CACImF,MAAOnF,EAAKoG,KACZ9C,MAAOtD,EAAKX,IACf,IAGL0L,EAAezE,EACnB,GAAG,CAACL,KAKA,+BACI,SAAC,IAAK,CACFvK,OAASM,EAAKqD,IAAc,OAAR,OAAkB,oBACtCqC,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OACPkF,KAAML,EACNM,cAAe,CAAEC,SAAUvB,GAC3BwB,SAAU,WAAQ1B,GAAQ,EAAQ,EAElC2B,cAAc,EACdvG,MAAO,IACPgE,UAAU,0BACVlB,OAAQ,EACJ,SAAC,IAAM,CAActB,QAAS,WAAQoD,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAYnH,KAAK,UAAU+D,QAASsE,EAAK,SAAC,QAArC,SACd,UAEF,SAAC,IAAI,CAACU,SAAU1B,EAAe2B,WAAW,SAACC,EAAA,EAAe,CAACrD,MAAO,CAAEsD,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,IAAI,CAACC,OAAO,WAAU,UACnB,UAAC,IAAG,CAAC5C,OAAQ,CAAC,EAAG,GAAG,WAChB,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,aAAaC,UAAQ,YAClC,SAAC,IAAM,CACHwC,YAAU,EACVC,YAAU,EACVxC,YAAY,oBACZyC,iBAAiB,WACjB3K,SAAU,SAAAoB,GAAO8E,EAAa,CAAE1F,UAAWY,GAAK,EAChDwJ,aAAc,SAACC,EAAOC,GAAM,aACV,QAAd,EAAO,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ9C,aAAK,QAAI,IAAI+C,cAAcR,SAASM,EAAME,cAAc,EAErEC,QAAS2C,SAIrB,SAAC,IAAG,CAACvI,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,SAASC,UAAQ,YAC9B,SAAC,IAAK,CAACC,YAAY,eAAevJ,KAAK,SAASwJ,IAAK,EAAGhC,MAAOtH,EAAKuJ,OAAQpI,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEkC,OAAQ9C,EAAE+C,OAAOlC,OAAQ,SAG7I,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,cAAcC,UAAQ,YACnC,SAAC,IAAK,CAACC,YAAY,oBAAoB/B,MAAOtH,EAAKyJ,WAAYtI,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEoC,WAAYhD,EAAE+C,OAAOlC,OAAQ,QAIvG,WAAzBtH,EAAK6C,iBACC,SAAC,IAAG,CAAC0D,KAAM,GAAG,UACZ,SAAC,SAAS,CAAC4C,MAAM,qBAAqBC,UAAQ,YAC1C,SAAC,IAAK,CAAC9B,MAAOtH,EAAK0J,kBAAmBvI,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEqC,kBAAmBjD,EAAE+C,OAAOlC,OAAQ,QAGhH,KAGmB,UAAzBtH,EAAK6C,iBACC,SAAC,IAAG,CAAC0D,KAAM,GAAG,UACZ,SAAC,SAAS,CAAC4C,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAK,CAACC,YAAY,kBAAkB/B,MAAOtH,EAAKF,KAAMqB,SAAU,SAACsF,GAAC,OAAKY,EAAa,CAAEvH,KAAM2G,EAAE+C,OAAOlC,OAAQ,QAGpH,MAEV,SAAC,IAAG,CAACf,KAAM,GAAG,UACV,SAAC,SAAS,CAAC4C,MAAM,OAAOC,UAAQ,YAC5B,SAAC,IAAU,CACPxG,OAAO,cACPzB,SAAU,SAACoB,GAAQ8E,EAAa,CAAEa,KAAM,IAAIvB,KAAKpE,IAAM,EACvD+E,MAAOqC,IAAMhH,IAAO3C,EAAKkI,MAAMtF,OAAO,cAAe,cACrDyD,UAAU,wBAYlD,IAEMwI,IAAiB9H,EAAAA,EAAAA,aAAW,SAACvG,EAAO2F,GACtC,IAAQjC,EAA0B1D,EAA1B0D,KAAMrB,EAAoBrC,EAApBqC,gBACd,GAAwBjB,EAAAA,EAAAA,WAAS,GAAM,eAAhCoF,EAAI,KAAEC,EAAO,KACpB,GAAgCrF,EAAAA,EAAAA,UAAS,IAAG,eAArCmL,EAAQ,KAAEC,EAAW,KAC5B,GAA0CpL,EAAAA,EAAAA,WAAS,GAAM,eAAlDuF,EAAa,KAAEC,EAAgB,KACtC,GAA8CxF,EAAAA,EAAAA,WAAS,GAAM,eAAtDoN,EAAe,KAAEC,EAAkB,MAG1CjH,EAAAA,EAAAA,qBAAoB7B,GAAK,iBAAO,CAC5BrC,SAAQ,SAACmE,GACLhB,GAAQ,GACR+F,EAAY,GAChB,EACH,KAsBDxH,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACU,EAAP,QAAf,EAAIuH,EAAS,UAAE,OAAX,EAAaH,KACb7M,EAAQmP,oBAAoB,CAAEtC,IAAgB,QAAb,EAAEG,EAAS,UAAE,aAAX,EAAaH,IAAK/J,gBAAAA,IAAmBuB,MAAK,SAAAC,GAAQ,IAAD,GAC5C,QAAhC,EAAAA,EAAIrE,KAAKmP,+BAAuB,aAAhC,EAAkCrK,QAAS,EAC3CsK,EAAqB/K,EAAIrE,KAAKmP,0BAE9B1N,EAAAA,GAAAA,QAAgB4C,EAAI5C,SACpBwN,GAAmB,GAE3B,IAAGzK,OAAM,SAAAC,GACLhD,EAAAA,GAAAA,QAAgBgD,EAAIhD,QACxB,GAER,GAAG,CAACsL,IAEJ,IAAMqC,EAAuB,SAACD,GAC1BE,EAAAA,EAAAA,QAAc,CACV3P,MAAO,yBACPgE,MAAM,SAAC4L,GAAA,EAAuB,IAC9BC,SAAS,iCACL,uBAAG,4CAECJ,EAAwB7K,KAAI,SAAC/B,EAAGE,GAAC,OAAM,SAAC,IAAG,CAACS,MAAM,MAAK,SAAUX,GAAJE,EAAY,OAGjFa,OAAQ,iBACRkM,OAAQ,SACRjM,WAAY,SACZiF,KAAI,WACAyG,GAAmB,EACvB,EACAtG,SAAQ,WAAK,GAErB,EAEA,OACI,+BACI,SAAC,IAAK,CACFjJ,MAAM,oBACNgG,MAAO,CAAE6C,IAAK,IACdvB,KAAMA,EACN1D,OAAO,OACPqF,SAAU,WAAQ1B,GAAQ,EAAQ,EAClC2B,cAAc,EACdvG,MAAO,IACPiK,gBAAc,EACdjG,UAAU,0BACVlB,OAAQ,EACJ,SAAC,IAAM,CAActB,QAAS,WAAQoD,GAAQ,EAAQ,EAAE,SAAC,UAA7C,WACZ,SAAC,IAAM,CAAYnH,KAAK,UAAU+D,QArErC,WAAO,IAAD,EAC0B,EAA1B,QAAX,EAAAkJ,EAAS,UAAE,OAAX,EAAaH,KAAOoC,IACpB5H,GAAiB,GACjBrH,EAAQ0P,eAAe,CAAE7C,IAAgB,QAAb,EAAEG,EAAS,UAAE,aAAX,EAAaH,IAAK/J,gBAAAA,IAAmBuB,MAAK,SAACC,GACrE/C,EAAQ+C,EAAI5C,SACZyC,IACA+C,GAAQ,EACZ,IAAGzC,OAAM,SAAAC,GACsB,kBAAhBA,EAAIhD,QAEXH,EADSmD,EAAIhD,QAAQ8F,OAAOM,KAAKpD,EAAIhD,SAAS,IAClC,SAEZH,EAAQmD,EAAIhD,QAAS,QAE7B,IAAGiD,SAAQ,WACP0C,GAAiB,EACrB,IAER,EAmDiEsB,UAAWsG,GAAmB7H,EAAc,SAAC,QAAlF,SACd,UAEF,SAAC,IAAI,CAAC0B,SAAU1B,EAAe2B,WAAW,SAACC,EAAA,EAAe,CAACrD,MAAO,CAAEsD,SAAU,IAAMC,MAAI,IAAI,UACxF,SAAC,GAAS,CAAO8D,SAAAA,EAAUC,YAAAA,EAAeC,MAAO,SAKrE,ICvfe,SAASyC,KAEpB,OACI,+BACI,SAAC,IAAM,CAAChK,MAAO,CAAEiK,UAAW,SAAW,UACnC,UAAC,IAAM,CAACtJ,UAAU,cAAa,WAC3B,SAAC,WAAa,CAAEX,MAAO,CAAEkK,QAAS,EAAGC,OAAQ,QAAS,UAClD,SAAC,IAAI,CAACC,MAAM,OAAOC,KAAK,aAAaC,MAAO,CACxC,CACI7G,OAAO,SAAC,KAAI,CAACtJ,GAAI,eAAe,SAAC,gBACjC0E,IAAK,eAET,CACI4E,MAAO,cACP5E,IAAK,eACL0L,SAAU,CACN,CACI9G,OAAO,SAAC,KAAI,CAACtJ,GAAI,cAAc,SAAC,gBAChC0E,IAAK,eAET,CACI4E,OAAO,SAAC,KAAI,CAACtJ,GAAI,mCAAmC,SAAC,yBACrD0E,IAAK,oCAET,CACI4E,OAAO,SAAC,KAAI,CAACtJ,GAAI,iCAAiC,SAAC,uBACnD0E,IAAK,kCAET,CACI4E,OAAO,SAAC,KAAI,CAACtJ,GAAI,uBAAuB,SAAC,aACzC0E,IAAK,0BAKjB,CACI4E,MAAgB,OAAT+G,EAAAA,QAAS,IAATA,EAAAA,GAAAA,EAAAA,EAAAA,KAAkBA,EAAAA,EAAAA,KAAiB,MAC1C3L,IAAK,UACL0L,SAAU,CACN,CACI1L,IAAK,UACL4E,MAAO,WAEX,CACI5E,IAAK,SACLd,QAAQ,EACR0F,MAAO,SACPtF,QAAS,WAAQiG,OAAOqG,aAAaC,QAAStG,OAAOC,SAASsG,QAAU,WAQ5F,SAAC,YAAc,WACX,SAAC,IAAI,CAAC3K,MAAO,CAAE4K,aAAc,QAAS,UAClC,UAAC,KAAM,YACH,SAAC,KAAK,CAACzG,KAAK,gBAAgB0G,SAAS,SAAC,EAAW,OACjD,SAAC,KAAK,CAAC1G,KAAK,eAAe0G,SAAU,SAAC3G,EAAa,OACnD,SAAC,KAAK,CAACC,KAAK,uBAAuB0G,SAAU,SAAChE,GAAO,OACrD,SAAC,KAAK,CAAC1C,KAAK,kCAAkC0G,SAAU,SAAC5B,GAAW,CAAC9L,gBAAgB,cACrF,SAAC,KAAK,CAACgH,KAAK,gCAAgC0G,SAAU,SAAC5B,GAAW,CAAC9L,gBAAgB,aACnF,SAAC,KAAK,CAACgH,KAAM,IAAK0G,SAAS,SAAC/Q,EAAQ,mBASpE,C","sources":["views/pages/errors/Error404.js","views/pages/SalesReport.js","services/transaction.js","services/account.js","views/components/Pagination.js","utils/Antd.js","views/pages/AccountTransaction.js","views/pages/BillingReport.js","views/pages/Account.js","services/file.js","utils/UploadCSV.js","views/pages/Transaction.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nconst SalesReport = () => {\r\n  return (\r\n    <div>SalesReport</div>\r\n  )\r\n}\r\n\r\nexport default SalesReport","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'transation';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static updateRemarks(data) {\r\n        return axios.post(this.baseURL + \"/update-remarks\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static saveFromCSVUrl(data) {\r\n        return axios.post(this.baseURL + \"/csv-upload\", data);\r\n    }\r\n    static checkPrevTransation(data) {\r\n        return axios.post(this.baseURL + \"/check-prev-transation\", data);\r\n    }\r\n\r\n    static listBillReport(data) {\r\n        return axios.get(this.baseURL + '/list-bill-report', { params: data });\r\n    }\r\n\r\n    static listLedger(data) {\r\n        return axios.get(this.baseURL + '/list-ledger', { params: data });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'account';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/save\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        // if (type === 'string') {\r\n        //     props.onChange(values?.join());\r\n        // } else {\r\n        props.onChange(values)\r\n        // }\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function AccountTransaction({ accountId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Bill Number',\r\n            dataIndex: 'billNumber',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Debit',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'debit' ? v.toFixed(2) : ''\r\n        },\r\n        {\r\n            title: 'Credit',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'credit' ? v.toFixed(2) : ''\r\n        },\r\n        {\r\n            title: 'Balance',\r\n            dataIndex: 'previousCreditAmount',\r\n            width: 150,\r\n            // render: (v, row) => ((row.previousCreditAmount - row.previousDebitAmount) * -1).toFixed(2)\r\n            render: (v, row) => {\r\n\t\t\t\tconst bal = ((row.previousCreditAmount - row.previousDebitAmount ) * -1).toFixed(2);\r\n\t\t\t\treturn bal > 20 ? <Tag color=\"red\"><b>{bal}</b></Tag> : bal < -20 ? <Tag color=\"blue\"><b>{bal}</b></Tag> : <Tag color=\"green\"><b>{bal}</b></Tag>;\r\n\t\t\t}\r\n        },\r\n        {\r\n            title: 'Ledger',\r\n            dataIndex: 'accountRecievable',\r\n            width: 150,\r\n            render: (v, row) => row.transactionType === 'debit' ? 'Sale' : v\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listLedger(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        size: 'small',\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, accountId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, accountId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { accountId, date: new Date() }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            console.log(res.data);\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id, open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Transaction Type\" required>\r\n                                    <Select value={data.transactionType} onChange={v => { handleChange({ transactionType: v }) }} >\r\n                                        <Select.Option value={\"credit\"} >Bill</Select.Option>\r\n                                        <Select.Option value={\"debit\"} >Sell</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Bill Number\" required>\r\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data.transactionType === 'credit'\r\n                                    ? <Col span={24}>\r\n                                        <Form.Item label=\"Account Recievable\" required>\r\n                                            <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                data.transactionType === 'debit'\r\n                                    ? <Col span={24}>\r\n                                        <Form.Item label=\"Type\" required>\r\n                                            <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    : null\r\n                            }\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Date\" required>\r\n                                    <DatePicker\r\n                                        format='DD MMM YYYY'\r\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\r\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\r\n                                        className=\"w-100\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Modal, Typography, Select, DatePicker, Tag, Input } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\nimport AccountTransaction from './AccountTransaction';\r\n\r\nexport default function BillingReport({ transactionType = \"credit\" }) {\r\n\tconst path = window.location.pathname.split('/')[2];\r\n\tconst [data, setData] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [accounts, setAccounts] = useState([]);\r\n\tconst [qData, setQData] = useState({ page: 1, limit: 20, transactionType });\r\n\tconst addNewModalRef = useRef();\r\n\tconst transactionModalRef = useRef();\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: '#',\r\n\t\t\twidth: 40,\r\n\t\t\trender: (v, row, i) => <b>{i + 1}</b>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Account Name',\r\n\t\t\tdataIndex: 'accountDetails',\r\n\t\t\trender: (data) => data?.name\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'date',\r\n\t\t\twidth: 150,\r\n\t\t\trender: v => moment(v).format('DD MMM YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Bill Number',\r\n\t\t\tdataIndex: 'billNumber',\r\n\t\t\twidth: 150,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Sale Amount',\r\n\t\t\tdataIndex: 'amount',\r\n\t\t\twidth: 150,\r\n\t\t\trender: v => <b>{v.toFixed(2)}</b>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Amount Received',\r\n\t\t\tdataIndex: 'previousCreditTransactions',\r\n\t\t\twidth: 150,\r\n\t\t\trender: (v) => (v?.reduce((acc, cv) => acc + cv.amount, 0)).toFixed(2)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Difference',\r\n\t\t\tdataIndex: 'previousCreditTransactions',\r\n\t\t\twidth: 150,\r\n\t\t\trender: (v, r) => (r.amount - v?.reduce((acc, cv) => acc + cv.amount, 0)).toFixed(2)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Balance',\r\n\t\t\tdataIndex: 'balance',\r\n\t\t\twidth: 150,\r\n\t\t\trender: (v, row) => {\r\n\t\t\t\tconst bal = v.toFixed(2) * -1;\r\n\t\t\t\treturn bal > 20 ? <Tag color=\"red\"><b>{bal}</b></Tag> : bal < -20 ? <Tag color=\"blue\"><b>{bal}</b></Tag> : <Tag color=\"green\"><b>{bal}</b></Tag>;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttitle: 'Balance',\r\n\t\t// \tdataIndex: 'previousCreditAmount',\r\n\t\t// \twidth: 150,\r\n\t\t// \trender: (v, row) => {\r\n\t\t// \t\tconst bal = ((row.previousCreditAmount - row.previousDebitAmount ) * -1).toFixed(2);\r\n\t\t// \t\treturn bal > 20 ? <Tag color=\"red\"><b>{bal}</b></Tag> : bal < -20 ? <Tag color=\"blue\"><b>{bal}</b></Tag> : <Tag color=\"green\"><b>{bal}</b></Tag>;\r\n\t\t// \t}\r\n\t\t// },\r\n\t\t{\r\n\t\t\ttitle: 'Remorks',\r\n\t\t\tdataIndex: '_id',\r\n\t\t\twidth: 300,\r\n\t\t\trender: (value, row) => {\r\n\t\t\t\treturn <>\r\n\t\t\t\t\t<Typography.Paragraph\r\n\t\t\t\t\t\tstyle={{marginBottom: '0px'}}\r\n\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\ttooltip: 'Click to edit remarks',\r\n\t\t\t\t\t\t\tonChange: (remarks) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tservice.updateRemarks({ _id: row._id, comment: remarks }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\tAntdMsg('Remarks updated');\r\n\t\t\t\t\t\t\t\t\t\tsetData(data.map(v=>{\r\n\t\t\t\t\t\t\t\t\t\t\tif(v._id === row._id){\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn ({...v, comment: remarks});\r\n\t\t\t\t\t\t\t\t\t\t\t} else{\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn v;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{row.comment}\r\n\t\t\t\t\t</Typography.Paragraph>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n            title: 'Ledger',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row.accountId) }} />\r\n        },\r\n\t].filter(item => !item.hidden);\r\n\r\n\tfunction list() {\r\n\t\tsetLoading(true);\r\n\t\tservice.listBillReport(qData).then(res => {\r\n\t\t\tsetData(res.data?.map((v, i) => ({ ...v, key: v.accountId + i })));\r\n\t\t\tsetQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n\t\t}).catch(err => { }).finally(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}\r\n\r\n\tconst deleteData = (id) => {\r\n\t\tservice.delete(id).then(res => {\r\n\t\t\tAntdMsg(res.message);\r\n\t\t\tlist();\r\n\t\t}).catch(err => {\r\n\t\t\tAntdMsg(err.message, 'error');\r\n\t\t})\r\n\t}\r\n\r\n\tconst tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n\ttableColumns[0].fixed = true;\r\n\ttableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n\tconst tableProps = {\r\n\t\tbordered: true,\r\n\t\tloading,\r\n\t\tsize: 'small',\r\n\t\ttitle: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, accounts }} />,\r\n\t\tshowHeader: true,\r\n\t\tfooter: () => <Pagination {...{ qData, setQData }} />,\r\n\t\ttableLayout: undefined,\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tsetQData({ ...qData, transactionType: path === \"sales-transaction\" ? \"debit\" : \"credit\" })\r\n\t}, [path])\r\n\r\n\tuseEffect(() => {\r\n\t\tlist();\r\n\t}, [qData.page, qData.limit, qData.transactionType]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tserviceAccount.list({ isAll: 1 })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetAccounts(res.data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tif (typeof err.message === 'object') {\r\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\r\n\t\t\t\t\tAntdMsg(dt, 'error');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAntdMsg(err.message, 'error');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography.Title level={5} style={{ margin: 0 }}>List of Transactions</Typography.Title>\r\n\r\n\t\t\t<Table\r\n\t\t\t\t{...tableProps}\r\n\t\t\t\tpagination={{ position: ['none'], pageSize: qData.limit }}\r\n\t\t\t\tcolumns={tableColumns}\r\n\t\t\t\t// dataSource={dataSource}\r\n\t\t\t\tdataSource={data.length ? data : []}\r\n\t\t\t\tscroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n\t\t\t\texpandable={{\r\n\t\t\t\t\trowExpandable: (record) => true,\r\n\t\t\t\t\texpandedRowRender: (record) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row-reverse' }} >\r\n\t\t\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\t\t\t// width={300}\r\n\t\t\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t\t\t\t// style={{width: '500px'}}\r\n\t\t\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tdataSource={[\r\n\t\t\t\t\t\t\t\t\t\t...record.previousCreditTransactions,\r\n\t\t\t\t\t\t\t\t\t\t// ...record.previousDebitTransactions,\r\n\t\t\t\t\t\t\t\t\t\t{ date: 'Total', transactionType: 'total' },\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\tcolumns={[\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Date',\r\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'date',\r\n\t\t\t\t\t\t\t\t\t\t\talign: 'left',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: 200,\r\n\t\t\t\t\t\t\t\t\t\t\trender: v => v !== 'Total' ? moment(v).format('DD MMM YYYY') : <b>Total</b>\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Bill',\r\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'amount',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\t\t\t\t\t\talign: 'right',\r\n\t\t\t\t\t\t\t\t\t\t\trender: (v, row) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (['credit', 'debit'].includes(row.transactionType)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn row.transactionType === 'credit' ? v.toFixed(2) : ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (row.date === 'Total') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <b>{(record.previousCreditTransactions?.reduce((acc, cv) => acc + cv.amount, 0)).toFixed(2)}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Account',\r\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'accountRecievable',\r\n\t\t\t\t\t\t\t\t\t\t\talign: 'left',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: 200,\r\n\t\t\t\t\t\t\t\t\t\t\t// render: v => v !== 'Total' ? v : <></>\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<AddForm ref={addNewModalRef} {...{ list, accounts }} />\r\n\t\t\t<TransactionModal ref={transactionModalRef} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nfunction Search({ addNewModalRef, qData, setQData, list, accounts }) {\r\n\r\n\treturn (\r\n\t\t<Form onSubmitCapture={list} className=\"search-form\">\r\n\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t<Col span={4}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tplaceholder=\"Choose a account\"\r\n\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\tvalue={qData.accountId}\r\n\t\t\t\t\t\t\tonChange={v => { setQData({ ...qData, accountId: v }) }}\r\n\t\t\t\t\t\t\tallowClear\r\n\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\tfilterOption={(input, option) =>\r\n\t\t\t\t\t\t\t\t(option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\toptions={accounts?.map(v => ({ label: v.name, value: v._id }))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={4}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startDate: new Date(e[0]), endDate: new Date(e[1]) }) }} />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={3}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={10}>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\topenForm(dt) {\r\n\t\t\tsetOpen(true);\r\n\t\t}\r\n\t}));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={'Report Details'}\r\n\t\t\t\tstyle={{ top: 20 }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tokText=\"Save\"\r\n\t\t\t\t// onOk={save}\r\n\t\t\t\t// okButtonProps={{ disabled: ajxRequesting }}\r\n\t\t\t\tonCancel={() => { setOpen(false); }}\r\n\t\t\t\t// destroyOnClose\r\n\t\t\t\tmaskClosable={false}\r\n\t\t\t\twidth={400}\r\n\t\t\t\tclassName=\"app-modal-body-overflow\"\r\n\t\t\t\tfooter={null}\r\n\t\t\t>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\n\r\nconst TransactionModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1600}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <AccountTransaction accountId={data} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport AccountTransaction from './AccountTransaction';\r\n\r\nexport default function Account({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const transactionModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 44,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: 'Initial Amount',\r\n            dataIndex: 'initialAmount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: (_, row) => {\r\n                if (row.status === \"opened\") {\r\n                    return <Tag color='green'>Opened</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Closed</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 110,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} style={{ marginRight: \"4px\" }} />\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Accounts</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\r\n            <TransactionModal ref={transactionModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => { setData({ ...data, ...value }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Initial Amount\" required>\r\n                                    <Input type='number' defaultValue={0} value={data.initialAmount} onChange={(e) => handleChange({ initialAmount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value=\"opened\">Opened</Select.Option>\r\n                                        <Select.Option value=\"closed\">Closed</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst TransactionModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1600}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <AccountTransaction accountId={data} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadAudio({ fileList, setFileList, count = 1, disabled = false }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    return <Upload\r\n        accept=\"text/csv\"\r\n        customRequest={uploadImage}\r\n        onChange={handleOnChange}\r\n        onRemove={handleRemove}\r\n        listType=\"picture\"\r\n        fileList={fileList}\r\n        className=\"image-upload-grid\"\r\n        disabled={disabled}\r\n        onPreview={(file) => {\r\n            return fetch(file.url, {\r\n                method: 'GET',\r\n            })\r\n                .then(res => res.json())\r\n                .then(({ thumbnail }) => {\r\n                    return thumbnail;\r\n                });\r\n        }}\r\n    >\r\n        {\r\n            fileList?.length >= count\r\n                ? null\r\n                : <Button icon={<UploadOutlined />} type=\"dashed\" danger style={{ margin: 30, width: \"134%\"}}>Upload CSV File</Button>\r\n        }\r\n    </Upload >\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, message, Timeline, Tag } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, UploadOutlined, ExclamationCircleFilled } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/transaction';\r\nimport serviceAccount from '../../services/account';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\nimport UploadCSV from '../../utils/UploadCSV';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function Transaction({ transactionType = \"credit\" }) {\r\n    const path = window.location.pathname.split('/')[2];\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, transactionType });\r\n    const addNewModalRef = useRef();\r\n    const uploadCsvModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Account Name',\r\n            dataIndex: 'accountDetail',\r\n            render: (data) => data?.name\r\n        },\r\n        {\r\n            title: 'Receivable Account',\r\n            dataIndex: 'accountRecievable',\r\n            width: 250,\r\n            hidden: transactionType === 'debit'\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: 150,\r\n            render: v => moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Bill Number',\r\n            dataIndex: 'billNumber',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Account data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        setQData({ ...qData, transactionType: path === \"sales-transaction\" ? \"debit\" : \"credit\" })\r\n    }, [path])\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit, qData.transactionType]);\r\n\r\n\r\n    useEffect(() => {\r\n        serviceAccount.list({ isAll: 1 })\r\n            .then(res => {\r\n                setAccounts(res.data);\r\n            })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ margin: 0 }}>List of {transactionType === 'debit' ? 'Sale' : 'Receipt'} Transactions</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, accounts, transactionType }} />\r\n            <UploadCsvModal ref={uploadCsvModalRef} transactionType={transactionType} list={list} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }) {\r\n\r\n    const [accountList, setAccountList] = useState([]);\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const acc = accounts?.map((item) => (\r\n            {\r\n                label: item.name,\r\n                value: item._id,\r\n            }\r\n\r\n        ))\r\n        setAccountList(acc)\r\n    }, [accounts])\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select an Account\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(e) => onChange(e, \"accountId\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={accountList}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: new Date(e[0]), endTime: new Date(e[1]) }) }} />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right', marginRight: \"1rem\" }}>\r\n                            <Button type=\"primary\" icon={<UploadOutlined />} onClick={() => { uploadCsvModalRef.current.openForm() }}>Upload File (CSV)</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, accounts, transactionType } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { transactionType }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    const [accountList, setAccountList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const acc = accounts?.map((item) => (\r\n            {\r\n                label: item.name,\r\n                value: item._id,\r\n            }\r\n\r\n        ))\r\n        setAccountList(acc)\r\n    }, [accounts])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[0, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Account Id\" required>\r\n                                    <Select\r\n                                        showSearch\r\n                                        allowClear\r\n                                        placeholder=\"Select an Account\"\r\n                                        optionFilterProp=\"children\"\r\n                                        onChange={v => { handleChange({ accountId: v }) }}\r\n                                        filterOption={(input, option) =>\r\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                        }\r\n                                        options={accountList}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Bill Number\" required>\r\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data.transactionType === 'credit'\r\n                                    ? <Col span={24}>\r\n                                        <Form.Item label=\"Account Recievable\" required>\r\n                                            <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                data.transactionType === 'debit'\r\n                                    ? <Col span={24}>\r\n                                        <Form.Item label=\"Type\" required>\r\n                                            <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    : null\r\n                            }\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Date\" required>\r\n                                    <DatePicker\r\n                                        format='DD MMM YYYY'\r\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\r\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\r\n                                        className=\"w-100\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst UploadCsvModal = forwardRef((props, ref) => {\r\n    const { list, transactionType } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [confirmDeletion, setConfirmDeletion] = useState(false);\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setFileList([]);\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        if (fileList[0]?.url && confirmDeletion) {\r\n            setAjxRequesting(true);\r\n            service.saveFromCSVUrl({ url: fileList[0]?.url, transactionType }).then((res) => {\r\n                AntdMsg(res.message);\r\n                list();\r\n                setOpen(false);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileList[0]?.url) {\r\n            service.checkPrevTransation({ url: fileList[0]?.url, transactionType }).then(res => {\r\n                if (res.data.alreadyExistedDataDates?.length > 0) {\r\n                    confirmDeletionModal(res.data.alreadyExistedDataDates);\r\n                } else {\r\n                    message.success(res.message);\r\n                    setConfirmDeletion(true);\r\n                }\r\n            }).catch(err => {\r\n                message.warning(err.message);\r\n            })\r\n        }\r\n    }, [fileList])\r\n\r\n    const confirmDeletionModal = (alreadyExistedDataDates) => {\r\n        Modal.confirm({\r\n            title: 'Records Already exists',\r\n            icon: <ExclamationCircleFilled />,\r\n            content: <>\r\n                <p>Records will be deleted on these dates </p>\r\n                {\r\n                    alreadyExistedDataDates.map((v, i) => (<Tag color=\"red\" key={i}>{v}</Tag>))\r\n                }\r\n            </>,\r\n            okText: 'Delete Records',\r\n            okType: 'danger',\r\n            cancelText: 'Cancel',\r\n            onOk() {\r\n                setConfirmDeletion(true);\r\n            },\r\n            onCancel() { },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Upload File (CSV)\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save} disabled={!confirmDeletion || ajxRequesting}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <UploadCSV {...{ fileList, setFileList }} count={1} />\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport commonObj from \"../../commonObj\";\r\nimport SalesReport from \"../pages/SalesReport\";\r\nimport BillingReport from \"../pages/BillingReport\";\r\nimport Account from \"../pages/Account\";\r\nimport Transaction from \"../pages/Transaction\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header  style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n                            {\r\n                                label: <Link to={'/bill-report'}>Bill Report</Link>,\r\n                                key: \"bill-report\"\r\n                            },\r\n                            {\r\n                                label: 'Sale Report',\r\n                                key: 'sale-report/',\r\n                                children: [\r\n                                    {\r\n                                        label: <Link to={'sale-report'}>Sale Report</Link>,\r\n                                        key: \"sale-report\"\r\n                                    },\r\n                                    {\r\n                                        label: <Link to={'/sale-report/receipt-transaction'}>Receipt Transactions</Link>,\r\n                                        key: \"/sale-report/receipt-transaction\"\r\n                                    },\r\n                                    {\r\n                                        label: <Link to={'/sale-report/sales-transaction'}>Sales Transactions</Link>,\r\n                                        key: \"/sale-report/sales-transaction\"\r\n                                    },\r\n                                    {\r\n                                        label: <Link to={'sale-report/accounts'}>Accounts</Link>,\r\n                                        key: \"sale-report/accounts\"\r\n                                    },\r\n                                ]\r\n                            },\r\n                            \r\n                            {\r\n                                label: commonObj?.name ? commonObj.name : 'You',\r\n                                key: 'profile',\r\n                                children: [\r\n                                    {\r\n                                        key: 'Profile',\r\n                                        label: 'Profile',\r\n                                    },\r\n                                    {\r\n                                        key: 'Logout',\r\n                                        danger: true,\r\n                                        label: 'Logout',\r\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n                                <Route path=\"sales-report/\" element={<SalesReport />} />\r\n                                <Route path=\"sale-report/\" element={ <BillingReport /> } />\r\n                                <Route path=\"sale-report/accounts\" element={ <Account /> } />\r\n                                <Route path=\"sale-report/receipt-transaction\" element={ <Transaction transactionType=\"credit\" /> } />\r\n                                <Route path=\"sale-report/sales-transaction\" element={ <Transaction transactionType=\"debit\" /> } />\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","AccountTransaction","accountId","useState","setData","loading","setLoading","selected","setSelected","addNewModalRef","useRef","columns","width","render","v","row","i","dataIndex","moment","format","transactionType","toFixed","bal","previousCreditAmount","previousDebitAmount","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","onClick","openForm","filter","item","hidden","list","listLedger","then","res","map","key","catch","err","finally","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","level","style","margin","pagination","position","dataSource","scroll","y","x","AddForm","ref","onSubmitCapture","className","gutter","span","marginBottom","e","startTime","Date","endTime","htmlType","float","forwardRef","open","setOpen","aspect","ajxRequesting","setAjxRequesting","handleChange","value","Object","entries","forEach","ent","varDt","k","keys","split","parseInt","useImperativeHandle","dt","date","save","detail","console","log","top","onOk","okButtonProps","disabled","onCancel","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","placeholder","min","amount","target","billNumber","accountRecievable","dayjs","BillingReport","path","window","location","pathname","accounts","setAccounts","transactionModalRef","name","reduce","acc","cv","r","editable","tooltip","remarks","updateRemarks","comment","EyeOutlined","listBillReport","serviceAccount","isAll","expandable","rowExpandable","record","expandedRowRender","display","flexDirection","previousCreditTransactions","align","includes","TransactionModal","showSearch","allowClear","optionFilterProp","filterOption","input","option","toLowerCase","options","startDate","endDate","destroyOnClose","Account","_","marginRight","defaultValue","initialAmount","url","config","UploadAudio","fileList","setFileList","count","uploadImage","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","accept","customRequest","fl","onRemove","listType","onPreview","fetch","method","json","thumbnail","UploadOutlined","Transaction","uploadCsvModalRef","UploadCsvModal","accountList","setAccountList","confirmDeletion","setConfirmDeletion","checkPrevTransation","alreadyExistedDataDates","confirmDeletionModal","Modal","ExclamationCircleFilled","content","okType","saveFromCSVUrl","MyLayout","minHeight","padding","height","theme","mode","items","children","commonObj","localStorage","clear","reload","borderRadius","element"],"sourceRoot":""}